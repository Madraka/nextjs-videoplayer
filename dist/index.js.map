{"version":3,"sources":["../src/index.ts","../src/components/player/configurable-video-player.tsx","../src/lib/utils.ts","../src/components/controls/video-controls.tsx","../src/components/ui/button.tsx","../src/components/ui/slider.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/ui/tooltip.tsx","../src/components/ui/dialog.tsx","../src/components/controls/keyboard-shortcuts.tsx","../src/components/controls/mobile-video-controls.tsx","../src/components/player/video-thumbnail.tsx","../src/components/player/loading-spinner.tsx","../src/components/player/error-display.tsx","../src/hooks/use-video-player.ts","../src/core/compatibility.ts","../src/core/video-engine.ts","../src/hooks/use-video-gestures.ts","../src/contexts/player-config-context.tsx","../src/types/player-config.ts","../src/components/player/video-player.tsx","../src/components/demo/video-player-demo.tsx","../src/components/demo/video-source-selector.tsx","../src/components/ui/card.tsx","../src/components/ui/badge.tsx","../src/components/demo/player-stats.tsx","../src/components/demo/feature-list.tsx","../src/components/config/player-config-panel.tsx","../src/components/ui/switch.tsx","../src/components/ui/select.tsx","../src/components/ui/tabs.tsx","../src/components/ui/input.tsx","../src/components/ui/label.tsx","../src/components/ui/separator.tsx"],"sourcesContent":["// Main Components\nexport { ConfigurableVideoPlayer } from './components/player/configurable-video-player';\nexport { VideoPlayer } from './components/player/video-player';\nexport { MobileVideoControls } from './components/controls/mobile-video-controls';\nexport { VideoControls } from './components/controls/video-controls';\nexport { VideoThumbnail } from './components/player/video-thumbnail';\nexport { LoadingSpinner } from './components/player/loading-spinner';\nexport { ErrorDisplay } from './components/player/error-display';\n\n// Demo Components (Optional)\nexport { VideoPlayerDemo } from './components/demo/video-player-demo';\nexport { VideoSourceSelector } from './components/demo/video-source-selector';\n\n// Context & Configuration\nexport { PlayerConfigProvider, usePlayerConfig, usePlayerPresets } from './contexts/player-config-context';\nexport { PlayerConfigPanel } from './components/config/player-config-panel';\n\n// Hooks\nexport { useVideoPlayer } from './hooks/use-video-player';\nexport { useVideoGestures } from './hooks/use-video-gestures';\n\n// Core Engine\nexport { VideoEngine } from './core/video-engine';\nexport { getBrowserCapabilities, getStreamingStrategy } from './core/compatibility';\n\n// Types\nexport type { \n  PlayerConfiguration,\n  PlayerTheme,\n  ControlsVisibility,\n  KeyboardShortcutsConfig,\n  GesturesConfig,\n  AutoBehavior,\n  AnalyticsConfig,\n  AdvancedFeatures,\n} from './types/player-config';\n\nexport type {\n  VideoPlayerState,\n  VideoPlayerControls,\n} from './hooks/use-video-player';\n\nexport type {\n  VideoEngineConfig,\n  VideoEngineEvents,\n} from './core/video-engine';\n\nexport type {\n  GestureConfig,\n  GestureCallbacks,\n} from './hooks/use-video-gestures';\n\n// Presets\nexport { PlayerPresets, mergePlayerConfig } from './types/player-config';\n\n// Utilities\nexport { cn } from './lib/utils';\n\n// Version\nexport const VERSION = '1.0.0';\n","'use client';\n\nimport React, { forwardRef, useRef, useCallback, useEffect } from 'react';\nimport { cn } from '@/lib/utils';\nimport { VideoControls } from '@/components/controls/video-controls';\nimport { MobileVideoControls } from '@/components/controls/mobile-video-controls';\nimport { LoadingSpinner } from '@/components/player/loading-spinner';\nimport { ErrorDisplay } from '@/components/player/error-display';\nimport { useVideoPlayer } from '@/hooks/use-video-player';\nimport { useVideoGestures } from '@/hooks/use-video-gestures';\nimport { usePlayerConfig } from '@/contexts/player-config-context';\nimport type { VideoEngineConfig } from '@/core/video-engine';\nimport type { PlayerConfiguration } from '@/types/player-config';\n\ninterface ConfigurableVideoPlayerProps {\n  src?: string;\n  poster?: string;\n  thumbnailUrl?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  playsInline?: boolean;\n  className?: string;\n  configOverride?: Partial<PlayerConfiguration>;\n  aspectRatio?: 'auto' | '16/9' | '4/3' | '1/1' | '9/16' | '3/4' | 'custom';\n  customAspectRatio?: string;\n  onReady?: () => void;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onError?: (error: string) => void;\n  onTimeUpdate?: (currentTime: number, duration: number) => void;\n  onStateChange?: (state: any) => void;\n}\n\nexport const ConfigurableVideoPlayer = forwardRef<HTMLVideoElement, ConfigurableVideoPlayerProps>(({\n  src,\n  poster,\n  thumbnailUrl,\n  autoPlay,\n  muted = false,\n  loop = false,\n  playsInline = true,\n  className,\n  configOverride,\n  aspectRatio = 'auto',\n  customAspectRatio,\n  onReady,\n  onPlay,\n  onPause,\n  onError,\n  onTimeUpdate,\n  onStateChange,\n}, ref) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [showControls, setShowControls] = React.useState(true);\n  const [isMobile, setIsMobile] = React.useState(false);\n  const controlsTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Mobile detection\n  useEffect(() => {\n    const checkMobile = () => {\n      const userAgent = navigator.userAgent;\n      const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n      const isSmallScreen = window.innerWidth < 768;\n      const isTouchDevice = 'ontouchstart' in window;\n      \n      setIsMobile(isMobileDevice || (isSmallScreen && isTouchDevice));\n    };\n\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Get configuration from context and merge with override\n  const { config: contextConfig } = usePlayerConfig();\n  const config = configOverride \n    ? { ...contextConfig, ...configOverride } \n    : contextConfig;\n\n  // Video player hook\n  const { state, controls: playerControls, qualityLevels, engine } = useVideoPlayer(videoRef, {\n    autoPlay: autoPlay ?? config.auto?.autoPlay ?? false,\n    muted,\n    volume: 1,\n  });\n\n  // Apply gesture configuration - Mobile optimized\n  const gesturesConfig = config.gestures || {};\n  \n  // Enhanced gesture callbacks for mobile\n  const gestureCallbacks = {\n    onTap: () => {\n      if (isMobile) {\n        // On mobile, tap toggles controls visibility\n        setShowControls(!showControls);\n      } else {\n        // On desktop, tap toggles play/pause\n        state.isPlaying ? playerControls.pause() : playerControls.play();\n      }\n    },\n    onDoubleTap: (direction: 'left' | 'right') => {\n      const seekAmount = 10;\n      if (direction === 'left') {\n        playerControls.seek(Math.max(0, state.currentTime - seekAmount));\n      } else {\n        playerControls.seek(Math.min(state.duration, state.currentTime + seekAmount));\n      }\n    },\n    onSwipeVolume: (delta: number) => {\n      const newVolume = Math.max(0, Math.min(1, state.volume + delta));\n      playerControls.setVolume(newVolume);\n    }\n  };\n  \n  // Use gesture hook with enhanced mobile support\n  useVideoGestures(videoRef, gestureCallbacks, {\n    enableTapToPlay: isMobile ? false : true, // On mobile, tap shows controls\n    enableDoubleTapSeek: true,\n    enableSwipeVolume: isMobile,\n    seekAmount: 10,\n    volumeSensitivity: 0.02,\n  });\n\n  // Auto behaviors from config\n  const autoHideControls = config.auto?.autoHideControls ?? true;\n  const autoHideDelay = config.auto?.autoHideDelay ?? 3000;\n\n  // Calculate aspect ratio\n  const getAspectRatio = () => {\n    if (aspectRatio === 'custom' && customAspectRatio) {\n      return customAspectRatio;\n    }\n    if (aspectRatio === 'auto' || state.isFullscreen || state.isTheaterMode) {\n      return 'auto';\n    }\n    return aspectRatio;\n  };\n\n  // Determine if this is a vertical video format\n  const isVerticalFormat = aspectRatio === '9/16' || aspectRatio === '3/4';\n  const isSquareFormat = aspectRatio === '1/1';\n\n  // Load video source when engine is ready\n  useEffect(() => {\n    if (!src || !engine) return;\n\n    const videoConfig: VideoEngineConfig = {\n      src,\n      poster,\n      autoplay: autoPlay ?? config.auto?.autoPlay ?? false,\n      muted,\n      loop,\n      playsInline,\n    };\n\n    const timer = setTimeout(() => {\n      playerControls.load(videoConfig);\n    }, 50);\n\n    return () => clearTimeout(timer);\n  }, [src, poster, autoPlay, muted, loop, playsInline, engine, config.auto?.autoPlay]);\n\n  // Event callbacks\n  useEffect(() => {\n    if (state.isPlaying) {\n      onPlay?.();\n    } else if (state.isPaused) {\n      onPause?.();\n    }\n  }, [state.isPlaying, state.isPaused, onPlay, onPause]);\n\n  useEffect(() => {\n    if (state.error) {\n      onError?.(state.error);\n    }\n  }, [state.error, onError]);\n\n  useEffect(() => {\n    onTimeUpdate?.(state.currentTime, state.duration);\n  }, [state.currentTime, state.duration, onTimeUpdate]);\n\n  useEffect(() => {\n    onStateChange?.(state);\n  }, [state, onStateChange]);\n\n  useEffect(() => {\n    if (!state.isLoading && state.duration > 0) {\n      onReady?.();\n    }\n  }, [state.isLoading, state.duration, onReady]);\n\n  // Auto-hide controls based on config\n  const showControlsTemporarily = useCallback(() => {\n    if (!autoHideControls) return;\n    \n    setShowControls(true);\n    \n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n    \n    if (state.isPlaying) {\n      controlsTimeoutRef.current = setTimeout(() => {\n        setShowControls(false);\n      }, autoHideDelay);\n    }\n  }, [state.isPlaying, autoHideControls, autoHideDelay]);\n\n  // Mouse movement detection\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container || !autoHideControls) return;\n\n    const handleMouseMove = () => {\n      showControlsTemporarily();\n    };\n\n    const handleMouseLeave = () => {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n      if (state.isPlaying) {\n        setShowControls(false);\n      }\n    };\n\n    container.addEventListener('mousemove', handleMouseMove);\n    container.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      container.removeEventListener('mousemove', handleMouseMove);\n      container.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [showControlsTemporarily, state.isPlaying, autoHideControls]);\n\n  // Show controls when paused or not auto-hiding\n  useEffect(() => {\n    if (!autoHideControls || !state.isPlaying) {\n      setShowControls(true);\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    }\n  }, [state.isPlaying, autoHideControls]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Forward ref\n  React.useImperativeHandle(ref, () => videoRef.current!);\n\n  // Apply theme styles\n  const themeStyles = config.theme ? {\n    '--player-primary': config.theme.primary || '#3b82f6',\n    '--player-secondary': config.theme.secondary || '#64748b',\n    '--player-accent': config.theme.accent || '#ef4444',\n    '--player-progress': config.theme.progressColor || '#3b82f6',\n    '--player-buffer': config.theme.bufferColor || '#64748b',\n  } as React.CSSProperties : {};\n\n  // Control visibility from config\n  const controlsVisibility = config.controls?.visibility || {};\n  const shouldShowControls = config.controls?.show !== false;\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\n        'relative bg-black overflow-hidden group transition-all duration-300',\n        'focus-within:outline-none focus-within:ring-2 focus-within:ring-blue-500',\n        state.isFullscreen && 'fixed inset-0 z-50',\n        state.isTheaterMode && 'mx-auto max-w-none',\n        // Format specific styles\n        isVerticalFormat ? 'max-w-sm mx-auto w-full' : \n        isSquareFormat ? 'max-w-lg mx-auto w-full' : 'w-full',\n        className\n      )}\n      style={{\n        aspectRatio: getAspectRatio(),\n        height: state.isTheaterMode ? '70vh' : \n                (isVerticalFormat ? 'min(70vh, 80vw * 16/9)' : \n                 isSquareFormat ? 'min(60vh, 90vw)' : 'auto'),\n        maxHeight: isVerticalFormat ? '70vh' : isSquareFormat ? '60vh' : undefined,\n        width: isVerticalFormat ? 'min(400px, 90vw)' : \n               isSquareFormat ? 'min(500px, 90vw)' : '100%',\n        ...themeStyles,\n      }}\n    >\n      {/* Video Element */}\n      <video\n        ref={videoRef}\n        className=\"w-full h-full object-contain\"\n        playsInline={playsInline}\n        {...(playsInline && { 'webkit-playsinline': '' })}\n        poster={poster}\n        preload=\"metadata\"\n      />\n\n      {/* Loading Spinner */}\n      {state.isLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/50\">\n          <LoadingSpinner />\n        </div>\n      )}\n\n      {/* Error Display */}\n      {state.error && (\n        <ErrorDisplay \n          error={state.error} \n          onRetry={() => {\n            if (src) {\n              playerControls.load({\n                src,\n                poster,\n                autoplay: autoPlay ?? config.auto?.autoPlay ?? false,\n                muted,\n                loop,\n                playsInline,\n              });\n            }\n          }}\n        />\n      )}\n\n      {/* Video Controls - Adaptive based on device */}\n      {shouldShowControls && (\n        <>\n          {isMobile ? (\n            <MobileVideoControls\n              state={state}\n              controls={playerControls}\n              qualityLevels={qualityLevels}\n              thumbnailPreview={config.features?.thumbnailPreview}\n              thumbnailUrl={thumbnailUrl}\n              className={cn(\n                'transition-opacity duration-300',\n                showControls ? 'opacity-100' : 'opacity-0',\n                'hover:opacity-100'\n              )}\n              onShow={() => setShowControls(true)}\n              onHide={() => setShowControls(false)}\n            />\n          ) : (\n            <VideoControls\n              state={state}\n              controls={playerControls}\n              qualityLevels={qualityLevels}\n              controlsConfig={{\n                fullscreen: controlsVisibility.fullscreen !== false,\n                volume: controlsVisibility.volume !== false,\n                quality: controlsVisibility.quality !== false,\n                progress: controlsVisibility.progress !== false,\n                playPause: controlsVisibility.playPause !== false,\n                playbackRate: controlsVisibility.playbackRate !== false,\n                pictureInPicture: controlsVisibility.pictureInPicture !== false,\n                theaterMode: controlsVisibility.theaterMode !== false,\n                settings: controlsVisibility.settings !== false,\n                time: controlsVisibility.time !== false,\n              }}\n              className={cn(\n                'transition-opacity duration-300',\n                showControls ? 'opacity-100' : 'opacity-0',\n                'hover:opacity-100'\n              )}\n              onShow={() => setShowControls(true)}\n              onHide={() => setShowControls(false)}\n            />\n          )}\n        </>\n      )}\n\n      {/* Analytics tracking */}\n      {config.analytics?.enabled && (\n        <div className=\"hidden\" data-analytics=\"true\" />\n      )}\n    </div>\n  );\n});\n\nConfigurableVideoPlayer.displayName = 'ConfigurableVideoPlayer';\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","/**\n * Video player controls component\n * Includes play/pause, progress bar, volume, quality, and fullscreen controls\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Play, \n  Pause, \n  Volume2, \n  VolumeX, \n  Maximize, \n  Minimize, \n  Settings,\n  Loader2,\n  PictureInPicture,\n  PictureInPicture2,\n  Gauge,\n  Monitor,\n  Smartphone\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  DropdownMenu, \n  DropdownMenuContent, \n  DropdownMenuItem, \n  DropdownMenuTrigger \n} from '@/components/ui/dropdown-menu';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport { cn } from '@/lib/utils';\nimport { KeyboardShortcuts } from './keyboard-shortcuts';\nimport type { VideoPlayerState, VideoPlayerControls } from '@/hooks/use-video-player';\n\ninterface VideoControlsProps {\n  state: VideoPlayerState;\n  controls: VideoPlayerControls;\n  qualityLevels: Array<{ id: string; label: string; height?: number }>;\n  controlsConfig: {\n    fullscreen?: boolean;\n    quality?: boolean;\n    volume?: boolean;\n    progress?: boolean;\n    playPause?: boolean;\n    playbackRate?: boolean;\n    pictureInPicture?: boolean;\n    theaterMode?: boolean;\n    settings?: boolean;\n    time?: boolean;\n  };\n  onShow?: () => void;\n  onHide?: () => void;\n  className?: string;\n}\n\n// Format time in MM:SS or HH:MM:SS\nconst formatTime = (seconds: number): string => {\n  if (!isFinite(seconds)) return '0:00';\n  \n  const hrs = Math.floor(seconds / 3600);\n  const mins = Math.floor((seconds % 3600) / 60);\n  const secs = Math.floor(seconds % 60);\n  \n  if (hrs > 0) {\n    return `${hrs}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\n// Playback speed options\nconst playbackRateOptions = [\n  { value: 0.25, label: '0.25x' },\n  { value: 0.5, label: '0.5x' },\n  { value: 0.75, label: '0.75x' },\n  { value: 1, label: 'Normal' },\n  { value: 1.25, label: '1.25x' },\n  { value: 1.5, label: '1.5x' },\n  { value: 1.75, label: '1.75x' },\n  { value: 2, label: '2x' },\n];\n\nexport const VideoControls: React.FC<VideoControlsProps> = ({\n  state,\n  controls,\n  qualityLevels,\n  controlsConfig,\n  onShow,\n  onHide,\n  className,\n}) => {\n  const [showVolumeSlider, setShowVolumeSlider] = useState(false);\n  const [hoverTime, setHoverTime] = useState<number | null>(null);\n  const [isMounted, setIsMounted] = useState(false);\n  \n  // Client-side mount check for SSR compatibility\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  \n  const handlePlayPause = () => {\n    if (state.isLoading) return;\n    \n    if (state.isPlaying && !state.isPaused) {\n      controls.pause();\n    } else if (state.isPaused && !state.isPlaying) {\n      controls.play();\n    }\n  };\n\n  const handleProgressClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    const clickX = event.clientX - rect.left;\n    const percentage = clickX / rect.width;\n    const newTime = percentage * state.duration;\n    controls.seek(newTime);\n  };\n\n  const handleProgressHover = (event: React.MouseEvent<HTMLDivElement>) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    const hoverX = event.clientX - rect.left;\n    const percentage = hoverX / rect.width;\n    const time = percentage * state.duration;\n    setHoverTime(time);\n  };\n\n  const handleVolumeChange = (value: number[]) => {\n    controls.setVolume(value[0] / 100);\n  };\n\n  const progressPercentage = state.duration > 0 ? (state.currentTime / state.duration) * 100 : 0;\n  const bufferedPercentage = state.buffered;\n\n  return (\n    <TooltipProvider>\n      <div className={cn(\n        'absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent',\n        'p-4 transition-opacity duration-300',\n        className\n      )}>\n        {/* Progress Bar */}\n        {controlsConfig.progress && (\n          <div className=\"mb-4\">\n            <div \n              className=\"relative w-full h-1 bg-white/20 rounded-full cursor-pointer group\"\n              onClick={handleProgressClick}\n              onMouseMove={handleProgressHover}\n              onMouseLeave={() => setHoverTime(null)}\n            >\n              {/* Buffered Progress */}\n              <div \n                className=\"absolute left-0 top-0 h-full bg-white/30 rounded-full\"\n                style={{ width: `${bufferedPercentage}%` }}\n              />\n              \n              {/* Play Progress */}\n              <div \n                className=\"absolute left-0 top-0 h-full bg-blue-500 rounded-full\"\n                style={{ width: `${progressPercentage}%` }}\n              />\n              \n              {/* Progress Handle */}\n              <div \n                className=\"absolute top-1/2 w-3 h-3 bg-blue-500 rounded-full transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity\"\n                style={{ left: `calc(${progressPercentage}% - 6px)` }}\n              />\n              \n              {/* Hover Preview */}\n              {hoverTime !== null && (\n                <div \n                  className=\"absolute bottom-6 transform -translate-x-1/2 bg-black/80 text-white px-2 py-1 rounded text-sm pointer-events-none z-10\"\n                  style={{ left: `${(hoverTime / state.duration) * 100}%` }}\n                >\n                  {formatTime(hoverTime)}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Control Buttons */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            {/* Play/Pause Button */}\n            {controlsConfig.playPause && (\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={handlePlayPause}\n                    disabled={state.isLoading}\n                    className=\"text-white hover:bg-white/10 p-2\"\n                  >\n                    {state.isLoading ? (\n                      <Loader2 className=\"w-5 h-5 animate-spin\" />\n                    ) : state.isPlaying ? (\n                      <Pause className=\"w-5 h-5\" />\n                    ) : (\n                      <Play className=\"w-5 h-5\" />\n                    )}\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  {state.isPlaying ? 'Pause' : 'Play'}\n                </TooltipContent>\n              </Tooltip>\n            )}\n\n            {/* Time Display */}\n            <div className=\"text-white text-sm font-mono\">\n              {formatTime(state.currentTime)} / {formatTime(state.duration)}\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            {/* Volume Control */}\n            {controlsConfig.volume && (\n              <div \n                className=\"flex items-center space-x-2\"\n                onMouseEnter={() => setShowVolumeSlider(true)}\n                onMouseLeave={() => setShowVolumeSlider(false)}\n              >\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={controls.toggleMute}\n                      className=\"text-white hover:bg-white/10 p-2\"\n                    >\n                      {state.isMuted || state.volume === 0 ? (\n                        <VolumeX className=\"w-5 h-5\" />\n                      ) : (\n                        <Volume2 className=\"w-5 h-5\" />\n                      )}\n                    </Button>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    {state.isMuted ? 'Unmute' : 'Mute'}\n                  </TooltipContent>\n                </Tooltip>\n\n                {/* Volume Slider */}\n                <div className={cn(\n                  'transition-all duration-200 overflow-hidden',\n                  showVolumeSlider ? 'w-20 opacity-100' : 'w-0 opacity-0'\n                )}>\n                  <Slider\n                    value={[state.isMuted ? 0 : state.volume * 100]}\n                    onValueChange={handleVolumeChange}\n                    max={100}\n                    step={1}\n                    className=\"w-full\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Playback Rate Control */}\n            {controlsConfig.playbackRate && (\n              <DropdownMenu>\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <DropdownMenuTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-white hover:bg-white/10 p-2 min-w-[60px]\"\n                      >\n                        <Gauge className=\"w-4 h-4 mr-1\" />\n                        <span className=\"text-xs\">{state.playbackRate}x</span>\n                      </Button>\n                    </DropdownMenuTrigger>\n                  </TooltipTrigger>\n                  <TooltipContent>Playback Speed</TooltipContent>\n                </Tooltip>\n                \n                <DropdownMenuContent align=\"end\" className=\"bg-black/90 border-white/10\">\n                  {playbackRateOptions.map((option) => (\n                    <DropdownMenuItem\n                      key={option.value}\n                      onClick={() => controls.setPlaybackRate(option.value)}\n                      className=\"text-white hover:bg-white/10 cursor-pointer\"\n                    >\n                      {option.label}\n                      {state.playbackRate === option.value && (\n                        <span className=\"ml-2 text-blue-400\">✓</span>\n                      )}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )}\n\n            {/* Quality Selector */}\n            {controlsConfig.quality && qualityLevels.length > 0 && (\n              <DropdownMenu>\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <DropdownMenuTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-white hover:bg-white/10 p-2\"\n                      >\n                        <Settings className=\"w-5 h-5\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                  </TooltipTrigger>\n                  <TooltipContent>Quality</TooltipContent>\n                </Tooltip>\n                \n                <DropdownMenuContent align=\"end\" className=\"bg-black/90 border-white/10\">\n                  {qualityLevels.map((level) => (\n                    <DropdownMenuItem\n                      key={level.id}\n                      onClick={() => controls.setQuality(level.id)}\n                      className=\"text-white hover:bg-white/10 cursor-pointer\"\n                    >\n                      {level.label}\n                      {state.quality === level.label && (\n                        <span className=\"ml-2 text-blue-400\">✓</span>\n                      )}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )}\n\n            {/* Theater Mode Toggle */}\n            {controlsConfig.theaterMode && (\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={controls.toggleTheaterMode}\n                    className=\"text-white hover:bg-white/10 p-2\"\n                  >\n                    {state.isTheaterMode ? (\n                      <Smartphone className=\"w-5 h-5\" />\n                    ) : (\n                      <Monitor className=\"w-5 h-5\" />\n                    )}\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  {state.isTheaterMode ? 'Exit Theater Mode' : 'Theater Mode'}\n                </TooltipContent>\n              </Tooltip>\n            )}\n\n            {/* Picture-in-Picture Toggle */}\n            {controlsConfig.pictureInPicture && isMounted && typeof document !== 'undefined' && 'pictureInPictureEnabled' in document && (\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={controls.togglePictureInPicture}\n                    className=\"text-white hover:bg-white/10 p-2\"\n                  >\n                    {state.isPictureInPicture ? (\n                      <PictureInPicture2 className=\"w-5 h-5\" />\n                    ) : (\n                      <PictureInPicture className=\"w-5 h-5\" />\n                    )}\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  {state.isPictureInPicture ? 'Exit Picture-in-Picture' : 'Picture-in-Picture'}\n                </TooltipContent>\n              </Tooltip>\n            )}\n\n            {/* Keyboard Shortcuts */}\n            <KeyboardShortcuts />\n\n            {/* Fullscreen Toggle */}\n            {controlsConfig.fullscreen && (\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={controls.toggleFullscreen}\n                    className=\"text-white hover:bg-white/10 p-2\"\n                  >\n                    {state.isFullscreen ? (\n                      <Minimize className=\"w-5 h-5\" />\n                    ) : (\n                      <Maximize className=\"w-5 h-5\" />\n                    )}\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  {state.isFullscreen ? 'Exit Fullscreen' : 'Fullscreen'}\n                </TooltipContent>\n              </Tooltip>\n            )}\n          </div>\n        </div>\n      </div>\n    </TooltipProvider>\n  );\n};\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Slider({\n  className,\n  defaultValue,\n  value,\n  min = 0,\n  max = 100,\n  ...props\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\n  const _values = React.useMemo(\n    () =>\n      Array.isArray(value)\n        ? value\n        : Array.isArray(defaultValue)\n          ? defaultValue\n          : [min, max],\n    [value, defaultValue, min, max]\n  )\n\n  return (\n    <SliderPrimitive.Root\n      data-slot=\"slider\"\n      defaultValue={defaultValue}\n      value={value}\n      min={min}\n      max={max}\n      className={cn(\n        \"relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col\",\n        className\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track\n        data-slot=\"slider-track\"\n        className={cn(\n          \"bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5\"\n        )}\n      >\n        <SliderPrimitive.Range\n          data-slot=\"slider-range\"\n          className={cn(\n            \"bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full\"\n          )}\n        />\n      </SliderPrimitive.Track>\n      {Array.from({ length: _values.length }, (_, index) => (\n        <SliderPrimitive.Thumb\n          data-slot=\"slider-thumb\"\n          key={index}\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\n        />\n      ))}\n    </SliderPrimitive.Root>\n  )\n}\n\nexport { Slider }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delayDuration={delayDuration}\n      {...props}\n    />\n  )\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  )\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n","'use client';\n\nimport React from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Keyboard } from 'lucide-react';\n\nconst shortcuts = [\n  { key: 'Space / K', description: 'Play/Pause' },\n  { key: 'F', description: 'Toggle Fullscreen' },\n  { key: 'M', description: 'Toggle Mute' },\n  { key: 'I', description: 'Toggle Picture-in-Picture' },\n  { key: 'T', description: 'Toggle Theater Mode' },\n  { key: '←', description: 'Rewind 10 seconds' },\n  { key: '→', description: 'Forward 10 seconds' },\n  { key: '↑', description: 'Volume up' },\n  { key: '↓', description: 'Volume down' },\n  { key: '0', description: 'Go to beginning' },\n  { key: '1-9', description: 'Go to 10%-90% of video' },\n];\n\nexport const KeyboardShortcuts: React.FC = () => {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"ghost\" size=\"sm\" className=\"text-white hover:bg-white/20\">\n          <Keyboard className=\"h-4 w-4\" />\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Keyboard Shortcuts</DialogTitle>\n        </DialogHeader>\n        <div className=\"space-y-2\">\n          {shortcuts.map((shortcut, index) => (\n            <div key={index} className=\"flex justify-between items-center py-1\">\n              <span className=\"text-sm text-muted-foreground\">{shortcut.description}</span>\n              <kbd className=\"px-2 py-1 text-xs bg-muted rounded font-mono\">\n                {shortcut.key}\n              </kbd>\n            </div>\n          ))}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","/**\n * Mobile-optimized video controls inspired by VK Player\n * Features: Touch-friendly UI, gesture support, adaptive layout\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { \n  Play, \n  Pause, \n  Volume2, \n  VolumeX, \n  Maximize, \n  Settings,\n  MoreHorizontal,\n  SkipBack,\n  SkipForward,\n  Loader2,\n  PictureInPicture,\n  Minimize\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\nimport { Progress } from '@/components/ui/progress';\nimport { cn } from '@/lib/utils';\nimport { VideoThumbnail } from '@/components/player/video-thumbnail';\nimport type { VideoPlayerState, VideoPlayerControls } from '@/hooks/use-video-player';\n\ninterface MobileVideoControlsProps {\n  state: VideoPlayerState;\n  controls: VideoPlayerControls;\n  qualityLevels: Array<{ id: string; label: string; height?: number }>;\n  className?: string;\n  onShow?: () => void;\n  onHide?: () => void;\n  /** Enable thumbnail previews */\n  thumbnailPreview?: boolean;\n  /** Base URL for thumbnail images */\n  thumbnailUrl?: string;\n}\n\n// Format time in MM:SS format\nconst formatTime = (seconds: number): string => {\n  if (!isFinite(seconds)) return '0:00';\n  \n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\nexport const MobileVideoControls: React.FC<MobileVideoControlsProps> = ({\n  state,\n  controls,\n  qualityLevels,\n  className,\n  onShow,\n  onHide,\n  thumbnailPreview = false,\n  thumbnailUrl,\n}) => {\n  const [showVolumePanel, setShowVolumePanel] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isMounted, setIsMounted] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const [hoverTime, setHoverTime] = useState<number | null>(null);\n  const [touchPosition, setTouchPosition] = useState<{ x: number; y: number } | null>(null);\n  const hideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Auto-hide controls functionality\n  const showControlsTemporarily = useCallback(() => {\n    setIsVisible(true);\n    onShow?.();\n    \n    // Clear existing timeout\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n    \n    // Set new timeout only if video is playing and no panels are open\n    if (state.isPlaying && !showVolumePanel && !showSettings) {\n      hideTimeoutRef.current = setTimeout(() => {\n        setIsVisible(false);\n        onHide?.();\n      }, 3000);\n    }\n  }, [state.isPlaying, showVolumePanel, showSettings, onShow, onHide]);\n\n  // Show controls when video is paused or panels are open\n  useEffect(() => {\n    if (!state.isPlaying || showVolumePanel || showSettings) {\n      setIsVisible(true);\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n        hideTimeoutRef.current = null;\n      }\n    }\n  }, [state.isPlaying, showVolumePanel, showSettings]);\n\n  // Touch/tap to toggle controls\n  const handleContainerTap = useCallback((e: React.MouseEvent) => {\n    // Only toggle controls if tapping on empty area (not on buttons)\n    if (e.target === e.currentTarget) {\n      setIsVisible(!isVisible);\n      \n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n        hideTimeoutRef.current = null;\n      }\n      \n      // If showing controls and video is playing, start auto-hide timer\n      if (!isVisible && state.isPlaying && !showVolumePanel && !showSettings) {\n        hideTimeoutRef.current = setTimeout(() => {\n          setIsVisible(false);\n          onHide?.();\n        }, 3000);\n      }\n    }\n  }, [isVisible, state.isPlaying, showVolumePanel, showSettings, onHide]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const progressPercentage = state.duration > 0 ? (state.currentTime / state.duration) * 100 : 0;\n  const bufferedPercentage = state.duration > 0 ? (state.buffered / state.duration) * 100 : 0;\n\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const percent = (e.clientX - rect.left) / rect.width;\n    const newTime = percent * state.duration;\n    controls.seek(newTime);\n  };\n\n  const handleProgressHover = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!thumbnailPreview) return;\n    \n    const rect = e.currentTarget.getBoundingClientRect();\n    const percent = (e.clientX - rect.left) / rect.width;\n    const time = percent * state.duration;\n    setHoverTime(time);\n  };\n\n  const handleProgressLeave = () => {\n    setHoverTime(null);\n  };\n\n  const handleProgressTouch = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (!thumbnailPreview) return;\n    \n    const touch = e.touches[0];\n    const rect = e.currentTarget.getBoundingClientRect();\n    const percent = (touch.clientX - rect.left) / rect.width;\n    const time = percent * state.duration;\n    \n    setHoverTime(time);\n    setTouchPosition({ x: touch.clientX, y: touch.clientY });\n  };\n\n  const handleTouchEnd = () => {\n    setHoverTime(null);\n    setTouchPosition(null);\n  };\n\n  const handleSeek = (direction: 'backward' | 'forward') => {\n    const seekAmount = 10; // seconds\n    const newTime = direction === 'backward' \n      ? Math.max(0, state.currentTime - seekAmount)\n      : Math.min(state.duration, state.currentTime + seekAmount);\n    controls.seek(newTime);\n  };\n\n  if (!isMounted) {\n    return null; // Prevent SSR hydration issues\n  }\n\n  return (\n    <div \n      className={cn(\n        'absolute inset-0 flex flex-col justify-between',\n        'bg-gradient-to-t from-black/80 via-transparent to-black/60',\n        'text-white transition-opacity duration-300',\n        'z-10', // Ensure controls are above video\n        isVisible ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none',\n        className\n      )}\n      onClick={handleContainerTap} // Tap to show controls\n      style={{ paddingBottom: 'env(safe-area-inset-bottom)' }}\n    >\n      \n      {/* Top Bar - Mobile optimized */}\n      <div className=\"flex items-center justify-between p-4 bg-gradient-to-b from-black/60 to-transparent touch-auto\">\n        <div className=\"flex items-center gap-3\">\n          {/* Loading indicator */}\n          {state.isLoading && (\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\n          )}\n          \n          {/* Quality indicator */}\n          <div className=\"px-2 py-1 bg-black/40 rounded text-xs font-medium\">\n            {state.quality === 'auto' ? 'AUTO' : state.quality.toUpperCase()}\n          </div>\n\n          {/* Volume level indicator */}\n          <div className=\"px-2 py-1 bg-black/40 rounded text-xs font-medium\">\n            {state.isMuted ? 'MUTED' : `${Math.round(state.volume * 100)}%`}\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          {/* Volume Control */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-12 w-12 p-0 text-white hover:bg-white/20 touch-manipulation\"\n            onClick={() => controls.toggleMute()}\n          >\n            {state.isMuted || state.volume === 0 ? (\n              <VolumeX className=\"h-6 w-6\" />\n            ) : (\n              <Volume2 className=\"h-6 w-6\" />\n            )}\n          </Button>\n\n          {/* More Volume Options */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-12 w-12 p-0 text-white hover:bg-white/20 touch-manipulation\"\n            onClick={() => setShowVolumePanel(!showVolumePanel)}\n          >\n            <MoreHorizontal className=\"h-6 w-6\" />\n          </Button>\n\n          {/* Picture in Picture */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-12 w-12 p-0 text-white hover:bg-white/20 touch-manipulation\"\n            onClick={() => controls.togglePictureInPicture()}\n            disabled={!state.duration}\n          >\n            <PictureInPicture className=\"h-6 w-6\" />\n          </Button>\n\n          {/* Settings */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-12 w-12 p-0 text-white hover:bg-white/20 touch-manipulation\"\n            onClick={() => setShowSettings(!showSettings)}\n          >\n            <Settings className=\"h-6 w-6\" />\n          </Button>\n\n          {/* Fullscreen */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-12 w-12 p-0 text-white hover:bg-white/20 touch-manipulation\"\n            onClick={() => controls.toggleFullscreen()}\n          >\n            {state.isFullscreen ? (\n              <Minimize className=\"h-6 w-6\" />\n            ) : (\n              <Maximize className=\"h-6 w-6\" />\n            )}\n          </Button>\n        </div>\n      </div>\n\n      {/* Center Play/Pause - Large touch target */}\n      <div className=\"flex-1 flex items-center justify-center touch-auto\">\n        <div className=\"flex items-center gap-8\">\n          {/* Seek Backward */}\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            className=\"h-16 w-16 rounded-full bg-black/40 backdrop-blur-sm border border-white/20 text-white hover:bg-black/60 hover:scale-110 transition-all duration-200 touch-manipulation\"\n            onClick={() => handleSeek('backward')}\n            disabled={!state.duration}\n          >\n            <SkipBack className=\"h-8 w-8\" />\n          </Button>\n\n          {/* Main Play/Pause Button - VK style with enhanced touch */}\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            className=\"h-24 w-24 rounded-full bg-black/50 backdrop-blur-sm border-2 border-white/30 text-white hover:bg-black/70 active:scale-95 transition-all duration-300 shadow-2xl touch-manipulation\"\n            onClick={() => {\n              state.isPlaying ? controls.pause() : controls.play();\n            }}\n            disabled={!state.duration && !state.isLoading}\n            style={{ minHeight: '96px', minWidth: '96px' }} // Ensure minimum touch target\n          >\n            {state.isLoading ? (\n              <Loader2 className=\"h-12 w-12 animate-spin\" />\n            ) : state.isPlaying ? (\n              <Pause className=\"h-12 w-12\" />\n            ) : (\n              <Play className=\"h-12 w-12 ml-1\" />\n            )}\n          </Button>\n\n          {/* Seek Forward */}\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            className=\"h-16 w-16 rounded-full bg-black/40 backdrop-blur-sm border border-white/20 text-white hover:bg-black/60 hover:scale-110 transition-all duration-200 touch-manipulation\"\n            onClick={() => handleSeek('forward')}\n            disabled={!state.duration}\n          >\n            <SkipForward className=\"h-8 w-8\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* Bottom Controls Bar */}\n      <div className=\"p-4 bg-gradient-to-t from-black/80 to-transparent space-y-2\" style={{ paddingBottom: 'max(3rem, calc(3rem + env(safe-area-inset-bottom)))' }}>\n        \n        {/* Playback rate indicator - moved to top */}\n        {state.playbackRate !== 1 && (\n          <div className=\"flex justify-center mb-2\">\n            <div className=\"px-4 py-2 bg-white/20 rounded-full text-sm font-medium\">\n              {state.playbackRate}x Speed\n            </div>\n          </div>\n        )}\n\n        {/* Progress Bar - Enhanced for mobile touch */}\n        <div className=\"space-y-2 touch-auto relative\">\n          <div \n            className=\"relative h-3 bg-white/20 rounded-full cursor-pointer group touch-manipulation\"\n            onClick={handleProgressClick}\n            onMouseMove={handleProgressHover}\n            onMouseLeave={handleProgressLeave}\n            onTouchMove={handleProgressTouch}\n            onTouchEnd={handleTouchEnd}\n            style={{ minHeight: '12px' }} // Ensure minimum touch target height\n          >\n            {/* Buffer indicator */}\n            <div \n              className=\"absolute left-0 top-0 h-full bg-white/30 rounded-full transition-all duration-300\"\n              style={{ width: `${bufferedPercentage}%` }}\n            />\n            \n            {/* Progress indicator */}\n            <div \n              className=\"absolute left-0 top-0 h-full bg-white rounded-full transition-all duration-300\"\n              style={{ width: `${progressPercentage}%` }}\n            />\n            \n            {/* Progress thumb - larger for mobile */}\n            <div \n              className=\"absolute top-1/2 transform -translate-y-1/2 w-5 h-5 bg-white rounded-full shadow-lg border-2 border-black/20 transition-all duration-200 group-active:scale-125\"\n              style={{ left: `calc(${progressPercentage}% - 10px)` }}\n            />\n\n            {/* Thumbnail Preview */}\n            {thumbnailPreview && hoverTime !== null && (\n              <div \n                className=\"absolute\"\n                style={{ \n                  left: `${(hoverTime / state.duration) * 100}%`,\n                  bottom: '100%',\n                  transform: 'translateX(-50%)'\n                }}\n              >\n                <VideoThumbnail\n                  duration={state.duration}\n                  currentTime={hoverTime}\n                  thumbnailUrl={thumbnailUrl}\n                  isMobile={true}\n                  thumbnailSize={{ width: 120, height: 68 }}\n                />\n              </div>\n            )}\n          </div>\n          \n          {/* Time display - larger text for mobile */}\n          <div className=\"flex justify-between text-base font-medium\">\n            <span>{formatTime(state.currentTime)}</span>\n            <span>{formatTime(state.duration)}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Volume Panel Overlay */}\n      {showVolumePanel && (\n        <div className=\"absolute top-16 left-4 bg-black/90 backdrop-blur-sm rounded-lg p-4 min-w-[200px]\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-sm font-medium\">Audio Controls</h3>\n            \n            {/* Volume Slider */}\n            <div className=\"space-y-2\">\n              <label className=\"text-xs text-gray-300\">Volume</label>\n              <Slider\n                value={[state.isMuted ? 0 : state.volume * 100]}\n                onValueChange={([value]) => {\n                  controls.setVolume(value / 100);\n                  if (value > 0 && state.isMuted) {\n                    controls.toggleMute();\n                  }\n                }}\n                max={100}\n                step={1}\n                className=\"w-full\"\n              />\n            </div>\n\n            {/* Close button */}\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"w-full\"\n              onClick={() => setShowVolumePanel(false)}\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Settings Panel Overlay */}\n      {showSettings && (\n        <div className=\"absolute top-16 right-4 bg-black/90 backdrop-blur-sm rounded-lg p-4 min-w-[200px]\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-sm font-medium\">Video Settings</h3>\n            \n            {/* Quality Selection */}\n            <div className=\"space-y-2\">\n              <label className=\"text-xs text-gray-300\">Quality</label>\n              <div className=\"grid gap-1\">\n                {qualityLevels.map((quality) => (\n                  <Button\n                    key={quality.id}\n                    variant={state.quality === quality.id ? \"default\" : \"ghost\"}\n                    size=\"sm\"\n                    className=\"justify-start text-xs\"\n                    onClick={() => controls.setQuality(quality.id)}\n                  >\n                    {quality.label}\n                  </Button>\n                ))}\n              </div>\n            </div>\n\n            {/* Playback Speed */}\n            <div className=\"space-y-2\">\n              <label className=\"text-xs text-gray-300\">Speed</label>\n              <div className=\"grid grid-cols-2 gap-1\">\n                {[0.5, 0.75, 1, 1.25, 1.5, 2].map((rate) => (\n                  <Button\n                    key={rate}\n                    variant={state.playbackRate === rate ? \"default\" : \"ghost\"}\n                    size=\"sm\"\n                    className=\"text-xs\"\n                    onClick={() => controls.setPlaybackRate(rate)}\n                  >\n                    {rate}x\n                  </Button>\n                ))}\n              </div>\n            </div>\n\n            {/* Close button */}\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"w-full\"\n              onClick={() => setShowSettings(false)}\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/**\n * Video thumbnail preview component for mobile and desktop\n * Shows thumbnail images on progress bar hover/touch\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface VideoThumbnailProps {\n  /** Current video duration in seconds */\n  duration: number;\n  /** Current time position for thumbnail */\n  currentTime: number;\n  /** Base URL for thumbnail images */\n  thumbnailUrl?: string;\n  /** Number of thumbnails per sprite sheet (optional) */\n  thumbnailCount?: number;\n  /** Thumbnail dimensions */\n  thumbnailSize?: {\n    width: number;\n    height: number;\n  };\n  /** CSS classes */\n  className?: string;\n  /** Show time overlay */\n  showTime?: boolean;\n  /** Mobile optimized */\n  isMobile?: boolean;\n}\n\n// Format time in MM:SS format\nconst formatTime = (seconds: number): string => {\n  if (!isFinite(seconds)) return '0:00';\n  \n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\nexport const VideoThumbnail: React.FC<VideoThumbnailProps> = ({\n  duration,\n  currentTime,\n  thumbnailUrl,\n  thumbnailCount = 100,\n  thumbnailSize = { width: 160, height: 90 },\n  className,\n  showTime = true,\n  isMobile = false,\n}) => {\n  const [thumbnailSrc, setThumbnailSrc] = useState<string>('');\n  const [spritePosition, setSpritePosition] = useState({ x: 0, y: 0 });\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // Generate thumbnail URL based on time\n  useEffect(() => {\n    if (!thumbnailUrl || !duration) return;\n\n    // Calculate thumbnail index based on current time\n    const progress = Math.max(0, Math.min(1, currentTime / duration));\n    const thumbnailIndex = Math.floor(progress * (thumbnailCount - 1));\n    \n    // If using sprite sheets, calculate position\n    if (thumbnailUrl.includes('sprite')) {\n      const spriteCols = 10; // Assuming 10x10 grid\n      const spriteRows = Math.ceil(thumbnailCount / spriteCols);\n      \n      const col = thumbnailIndex % spriteCols;\n      const row = Math.floor(thumbnailIndex / spriteCols);\n      \n      setSpritePosition({\n        x: col * thumbnailSize.width,\n        y: row * thumbnailSize.height\n      });\n      \n      setThumbnailSrc(thumbnailUrl);\n    } else {\n      // Individual thumbnail files\n      const paddedIndex = thumbnailIndex.toString().padStart(3, '0');\n      setThumbnailSrc(`${thumbnailUrl}/thumb_${paddedIndex}.jpg`);\n    }\n  }, [currentTime, duration, thumbnailUrl, thumbnailCount, thumbnailSize]);\n\n  // Generate fallback thumbnail from video frame\n  const generateFallbackThumbnail = async (videoSrc: string, time: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const video = document.createElement('video');\n    video.crossOrigin = 'anonymous';\n    video.muted = true;\n    \n    return new Promise<string>((resolve) => {\n      video.onloadeddata = () => {\n        video.currentTime = time;\n      };\n      \n      video.onseeked = () => {\n        canvas.width = thumbnailSize.width;\n        canvas.height = thumbnailSize.height;\n        \n        ctx.drawImage(video, 0, 0, thumbnailSize.width, thumbnailSize.height);\n        const dataURL = canvas.toDataURL('image/jpeg', 0.8);\n        resolve(dataURL);\n      };\n      \n      video.src = videoSrc;\n    });\n  };\n\n  if (!thumbnailSrc && !thumbnailUrl) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'absolute bottom-6 transform -translate-x-1/2 pointer-events-none z-20',\n        'bg-black/90 backdrop-blur-sm rounded-lg overflow-hidden shadow-lg border border-white/20',\n        isMobile ? 'bottom-12' : 'bottom-6',\n        className\n      )}\n      style={{ \n        width: thumbnailSize.width + 16, \n        height: thumbnailSize.height + (showTime ? 40 : 16)\n      }}\n    >\n      {/* Thumbnail Image */}\n      <div \n        className=\"relative bg-gray-800\"\n        style={{ \n          width: thumbnailSize.width, \n          height: thumbnailSize.height,\n          margin: '8px 8px 0 8px'\n        }}\n      >\n        {thumbnailSrc ? (\n          <img\n            src={thumbnailSrc}\n            alt={`Preview at ${formatTime(currentTime)}`}\n            className=\"w-full h-full object-cover rounded\"\n            style={\n              thumbnailUrl?.includes('sprite') ? {\n                objectPosition: `-${spritePosition.x}px -${spritePosition.y}px`,\n                width: thumbnailSize.width * 10, // Sprite sheet width\n                height: thumbnailSize.height * 10, // Sprite sheet height\n              } : undefined\n            }\n            onError={() => {\n              // Fallback to placeholder or generated thumbnail\n              setThumbnailSrc(`/api/placeholder/${thumbnailSize.width}/${thumbnailSize.height}`);\n            }}\n          />\n        ) : (\n          <div className=\"w-full h-full bg-gray-700 flex items-center justify-center rounded\">\n            <div className=\"text-white/60 text-xs\">Loading...</div>\n          </div>\n        )}\n        \n        {/* Loading overlay */}\n        <div className=\"absolute inset-0 bg-black/20 rounded\" />\n      </div>\n\n      {/* Time Display */}\n      {showTime && (\n        <div className=\"px-3 py-2 text-center\">\n          <span className=\"text-white text-sm font-medium\">\n            {formatTime(currentTime)}\n          </span>\n        </div>\n      )}\n\n      {/* Pointer arrow */}\n      <div className=\"absolute -bottom-1 left-1/2 transform -translate-x-1/2\">\n        <div className=\"w-3 h-3 bg-black/90 rotate-45 border-r border-b border-white/20\" />\n      </div>\n\n      {/* Hidden canvas for fallback thumbnail generation */}\n      <canvas ref={canvasRef} className=\"hidden\" />\n    </div>\n  );\n};\n\nexport default VideoThumbnail;\n","'use client';\n\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface LoadingSpinnerProps {\n  className?: string;\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  className,\n  size = 'medium' \n}) => {\n  const sizeClasses = {\n    small: 'w-6 h-6',\n    medium: 'w-8 h-8',\n    large: 'w-12 h-12'\n  };\n\n  return (\n    <div className={cn('flex items-center justify-center', className)}>\n      <div \n        className={cn(\n          'animate-spin rounded-full border-2 border-gray-300 border-t-white',\n          sizeClasses[size]\n        )}\n      ></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","/**\n * Error display component for video player\n */\n\nimport React from 'react';\nimport { AlertCircle, RefreshCw } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface ErrorDisplayProps {\n  error: string;\n  onRetry?: () => void;\n  className?: string;\n}\n\nexport const ErrorDisplay: React.FC<ErrorDisplayProps> = ({ \n  error, \n  onRetry,\n  className \n}) => {\n  return (\n    <div className={cn(\n      'flex flex-col items-center justify-center space-y-4 p-6 text-white text-center max-w-md',\n      className\n    )}>\n      <AlertCircle className=\"w-12 h-12 text-red-400\" />\n      \n      <div className=\"space-y-2\">\n        <h3 className=\"text-lg font-semibold\">Video Error</h3>\n        <p className=\"text-sm text-white/80\">{error}</p>\n      </div>\n\n      {onRetry && (\n        <Button\n          onClick={onRetry}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"text-white border-white/20 hover:bg-white/10\"\n        >\n          <RefreshCw className=\"w-4 h-4 mr-2\" />\n          Try Again\n        </Button>\n      )}\n    </div>\n  );\n};\n","/**\n * Video player state management hook\n * Handles playback state, progress, volume, and player controls\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { VideoEngine, type VideoEngineConfig, type VideoEngineEvents } from '@/core/video-engine';\n\nexport interface VideoPlayerState {\n  isPlaying: boolean;\n  isPaused: boolean;\n  isLoading: boolean;\n  isMuted: boolean;\n  currentTime: number;\n  duration: number;\n  volume: number;\n  buffered: number;\n  quality: string;\n  playbackRate: number;\n  isFullscreen: boolean;\n  isPictureInPicture: boolean;\n  isTheaterMode: boolean;\n  error: string | null;\n  // Analytics data\n  playCount: number;\n  totalWatchTime: number;\n  bufferingTime: number;\n  averageBitrate: number;\n  qualityChanges: number;\n}\n\nexport interface VideoPlayerControls {\n  play: () => Promise<void>;\n  pause: () => void;\n  seek: (time: number) => void;\n  setVolume: (volume: number) => void;\n  toggleMute: () => void;\n  toggleFullscreen: () => void;\n  togglePictureInPicture: () => Promise<void>;\n  toggleTheaterMode: () => void;\n  setPlaybackRate: (rate: number) => void;\n  setQuality: (qualityId: string) => void;\n  load: (config: VideoEngineConfig) => Promise<void>;\n}\n\ninterface UseVideoPlayerOptions {\n  autoPlay?: boolean;\n  muted?: boolean;\n  volume?: number;\n}\n\nexport const useVideoPlayer = (\n  videoRef: React.RefObject<HTMLVideoElement | null>,\n  options: UseVideoPlayerOptions = {}\n) => {\n  const [state, setState] = useState<VideoPlayerState>({\n    isPlaying: false,\n    isPaused: true,\n    isLoading: false,\n    isMuted: options.muted ?? false,\n    currentTime: 0,\n    duration: 0,\n    volume: options.volume ?? 1,\n    buffered: 0,\n    quality: 'auto',\n    playbackRate: 1,\n    isFullscreen: false,\n    isPictureInPicture: false,\n    isTheaterMode: false,\n    error: null,\n    // Analytics data\n    playCount: 0,\n    totalWatchTime: 0,\n    bufferingTime: 0,\n    averageBitrate: 0,\n    qualityChanges: 0,\n  });\n\n  const [engine, setEngine] = useState<VideoEngine | null>(null);\n  const [isEngineReady, setIsEngineReady] = useState(false);\n  const [pendingConfig, setPendingConfig] = useState<VideoEngineConfig | null>(null);\n  const [isPlayPending, setIsPlayPending] = useState(false);\n  const [qualityLevels, setQualityLevels] = useState<Array<{ id: string; label: string; height?: number }>>([]);\n  \n  // Analytics tracking\n  const [lastPlayTime, setLastPlayTime] = useState<number>(0);\n  const [bufferingStartTime, setBufferingStartTime] = useState<number>(0);\n\n  // Initialize video engine\n  useEffect(() => {\n    if (!videoRef.current) return;\n\n    const videoElement = videoRef.current;\n    \n    const events: VideoEngineEvents = {\n      onReady: () => {\n        console.log('VideoEngine: onReady event fired');\n        setState(prev => ({ ...prev, isLoading: false }));\n        setIsEngineReady(true);\n      },\n      onPlay: () => {\n        setState(prev => ({ \n          ...prev, \n          isPlaying: true, \n          isPaused: false,\n          playCount: prev.playCount + 1\n        }));\n        setLastPlayTime(Date.now());\n      },\n      onPause: () => {\n        setState(prev => {\n          const watchTime = lastPlayTime > 0 ? (Date.now() - lastPlayTime) / 1000 : 0;\n          return {\n            ...prev, \n            isPlaying: false, \n            isPaused: true,\n            totalWatchTime: prev.totalWatchTime + watchTime\n          };\n        });\n      },\n      onTimeUpdate: (currentTime, duration) => {\n        setState(prev => ({ ...prev, currentTime, duration }));\n      },\n      onProgress: (buffered) => {\n        setState(prev => ({ ...prev, buffered }));\n      },\n      onVolumeChange: (volume, muted) => {\n        setState(prev => ({ ...prev, volume, isMuted: muted }));\n      },\n      onQualityChange: (quality) => {\n        setState(prev => ({ \n          ...prev, \n          quality,\n          qualityChanges: prev.qualityChanges + 1\n        }));\n      },\n      onError: (error) => {\n        setState(prev => ({ ...prev, error: error.message, isLoading: false }));\n      },\n      onLoadStart: () => {\n        setState(prev => ({ ...prev, isLoading: true, error: null }));\n        setBufferingStartTime(Date.now());\n      },\n      onLoadEnd: () => {\n        setState(prev => {\n          const bufferingTime = bufferingStartTime > 0 ? (Date.now() - bufferingStartTime) / 1000 : 0;\n          return {\n            ...prev, \n            isLoading: false,\n            bufferingTime: prev.bufferingTime + bufferingTime\n          };\n        });\n      },\n    };\n\n    const videoEngine = new VideoEngine(videoElement, events);\n    setEngine(videoEngine);\n\n    // Initialize engine\n    console.log('Initializing video engine...');\n    videoEngine.initialize()\n      .then(() => {\n        console.log('Video engine initialized successfully');\n      })\n      .catch(error => {\n        console.error('Video engine initialization failed:', error);\n        setState(prev => ({ ...prev, error: error.message }));\n      });\n\n    return () => {\n      videoEngine.cleanup();\n    };\n  }, [videoRef]);\n\n  // Load pending config when engine becomes ready\n  useEffect(() => {\n    if (isEngineReady && engine && pendingConfig) {\n      console.log('Engine is ready, loading pending config:', pendingConfig.src);\n      engine.loadSource(pendingConfig)\n        .then(() => {\n          console.log('Pending video loaded successfully');\n          const levels = engine.getQualityLevels();\n          setQualityLevels(levels);\n          setPendingConfig(null);\n        })\n        .catch(error => {\n          console.error('Pending video load error:', error);\n          setState(prev => ({ \n            ...prev, \n            error: `Failed to load video: ${error.message}` \n          }));\n          setPendingConfig(null);\n        });\n    }\n  }, [isEngineReady, engine, pendingConfig]);\n\n  // Event listeners for fullscreen and PiP changes\n  useEffect(() => {\n    if (typeof document === 'undefined') return;\n\n    const handleFullscreenChange = () => {\n      setState(prev => ({ \n        ...prev, \n        isFullscreen: Boolean(document.fullscreenElement) \n      }));\n    };\n\n    const handleEnterPiP = () => {\n      setState(prev => ({ ...prev, isPictureInPicture: true }));\n    };\n\n    const handleLeavePiP = () => {\n      setState(prev => ({ ...prev, isPictureInPicture: false }));\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    \n    if (videoRef.current) {\n      videoRef.current.addEventListener('enterpictureinpicture', handleEnterPiP);\n      videoRef.current.addEventListener('leavepictureinpicture', handleLeavePiP);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n      if (videoRef.current) {\n        videoRef.current.removeEventListener('enterpictureinpicture', handleEnterPiP);\n        videoRef.current.removeEventListener('leavepictureinpicture', handleLeavePiP);\n      }\n    };\n  }, [videoRef]);\n\n  // Controls\n  const controls: VideoPlayerControls = {\n    play: useCallback(async () => {\n      if (!videoRef.current || isPlayPending) return;\n      \n      try {\n        setIsPlayPending(true);\n        \n        // Check if video is already playing\n        if (!videoRef.current.paused) {\n          setIsPlayPending(false);\n          return;\n        }\n        \n        await videoRef.current.play();\n        setIsPlayPending(false);\n      } catch (error) {\n        setIsPlayPending(false);\n        console.error('Play failed:', error);\n        \n        // Don't show error for common autoplay restrictions\n        const errorMessage = (error as Error).message;\n        if (!errorMessage.includes('user didn\\'t interact') && \n            !errorMessage.includes('autoplay') &&\n            !errorMessage.includes('gesture')) {\n          setState(prev => ({ \n            ...prev, \n            error: `Playback failed: ${errorMessage}` \n          }));\n        }\n      }\n    }, [videoRef, isPlayPending]),\n\n    pause: useCallback(() => {\n      if (!videoRef.current || isPlayPending) return;\n      \n      // Only pause if video is actually playing\n      if (!videoRef.current.paused) {\n        videoRef.current.pause();\n      }\n    }, [videoRef, isPlayPending]),\n\n    seek: useCallback((time: number) => {\n      if (!videoRef.current) return;\n      videoRef.current.currentTime = time;\n    }, [videoRef]),\n\n    setVolume: useCallback((volume: number) => {\n      if (!videoRef.current) return;\n      videoRef.current.volume = Math.max(0, Math.min(1, volume));\n    }, [videoRef]),\n\n    toggleMute: useCallback(() => {\n      if (!videoRef.current) return;\n      videoRef.current.muted = !videoRef.current.muted;\n    }, [videoRef]),\n\n    toggleFullscreen: useCallback(async () => {\n      if (!videoRef.current) return;\n      \n      try {\n        if (document.fullscreenElement) {\n          await document.exitFullscreen();\n        } else {\n          await videoRef.current.requestFullscreen();\n        }\n      } catch (error) {\n        setState(prev => ({ \n          ...prev, \n          error: `Fullscreen failed: ${(error as Error).message}` \n        }));\n      }\n    }, [videoRef]),\n\n    setQuality: useCallback((qualityId: string) => {\n      if (!engine) return;\n      engine.setQuality(qualityId);\n    }, [engine]),\n\n    setPlaybackRate: useCallback((rate: number) => {\n      if (!videoRef.current) return;\n      videoRef.current.playbackRate = rate;\n      setState(prev => ({ ...prev, playbackRate: rate }));\n    }, [videoRef]),\n\n    togglePictureInPicture: useCallback(async () => {\n      if (!videoRef.current) return;\n      \n      try {\n        if (state.isPictureInPicture) {\n          await document.exitPictureInPicture();\n        } else {\n          await videoRef.current.requestPictureInPicture();\n        }\n      } catch (error) {\n        console.error('Picture-in-Picture error:', error);\n      }\n    }, [videoRef, state.isPictureInPicture]),\n\n    toggleTheaterMode: useCallback(() => {\n      setState(prev => ({ \n        ...prev, \n        isTheaterMode: !prev.isTheaterMode \n      }));\n    }, []),\n\n    load: useCallback(async (config: VideoEngineConfig) => {\n      if (!engine) {\n        console.log('Engine not available yet, storing config as pending');\n        setPendingConfig(config);\n        return;\n      }\n      \n      if (!isEngineReady) {\n        console.log('Engine not ready yet, storing config as pending');\n        setPendingConfig(config);\n        return;\n      }\n      \n      try {\n        console.log('Loading video source:', config.src);\n        await engine.loadSource(config);\n        // Update quality levels after loading\n        const levels = engine.getQualityLevels();\n        setQualityLevels(levels);\n        console.log('Video loaded successfully');\n      } catch (error) {\n        console.error('Video load error:', error);\n        setState(prev => ({ \n          ...prev, \n          error: `Failed to load video: ${(error as Error).message}` \n        }));\n      }\n    }, [engine, isEngineReady])\n  };\n\n  // Keyboard controls - must be after controls definition\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const handleKeyPress = (e: KeyboardEvent) => {\n      // Only handle keys when video is in focus or no input is focused\n      if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\n        return;\n      }\n\n      switch (e.key) {\n        case ' ':\n        case 'k':\n          e.preventDefault();\n          if (state.isPlaying && !state.isPaused) {\n            controls.pause();\n          } else {\n            controls.play();\n          }\n          break;\n        case 'ArrowLeft':\n          e.preventDefault();\n          controls.seek(Math.max(0, state.currentTime - 10));\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          controls.seek(Math.min(state.duration, state.currentTime + 10));\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          controls.setVolume(Math.min(1, state.volume + 0.1));\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          controls.setVolume(Math.max(0, state.volume - 0.1));\n          break;\n        case 'm':\n          e.preventDefault();\n          controls.toggleMute();\n          break;\n        case 'f':\n          e.preventDefault();\n          controls.toggleFullscreen();\n          break;\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          e.preventDefault();\n          const percentage = parseInt(e.key) / 10;\n          controls.seek(state.duration * percentage);\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [state.isPlaying, state.currentTime, state.duration, state.volume, controls]);\n\n  return {\n    state,\n    controls,\n    qualityLevels,\n    engine,\n  };\n};\n","/**\n * Browser and device compatibility utilities\n * Detects HLS support, device capabilities, and autoplay policies\n */\n\nexport interface BrowserCapabilities {\n  hasNativeHls: boolean;\n  hasHlsJs: boolean;\n  hasDashJs: boolean;\n  isMobile: boolean;\n  isIOS: boolean;\n  isAndroid: boolean;\n  supportsInlinePlayback: boolean;\n  supportsAutoplay: boolean;\n  supportsPictureInPicture: boolean;\n}\n\n/**\n * Check if browser supports native HLS playback\n */\nexport const hasNativeHlsSupport = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  const video = document.createElement('video');\n  return video.canPlayType('application/vnd.apple.mpegurl') !== '';\n};\n\n/**\n * Check if HLS.js is supported in current browser\n */\nexport const hasHlsJsSupport = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  try {\n    // Check if MediaSource API is supported (required for HLS.js)\n    return !!(window.MediaSource || (window as unknown as { WebKitMediaSource?: unknown }).WebKitMediaSource);\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Check if Dash.js is supported in current browser\n */\nexport const hasDashJsSupport = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  try {\n    // Check if MediaSource API is supported (required for Dash.js)\n    return !!(window.MediaSource || (window as unknown as { WebKitMediaSource?: unknown }).WebKitMediaSource);\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Detect if device is mobile\n */\nexport const isMobileDevice = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n};\n\n/**\n * Detect iOS devices\n */\nexport const isIOSDevice = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  return /iPad|iPhone|iPod/.test(navigator.userAgent);\n};\n\n/**\n * Detect Android devices\n */\nexport const isAndroidDevice = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  return /Android/.test(navigator.userAgent);\n};\n\n/**\n * Check if browser supports Picture-in-Picture\n */\nexport const supportsPictureInPicture = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  return 'pictureInPictureEnabled' in document;\n};\n\n/**\n * Check if browser likely supports autoplay\n * This is a best-guess, actual autoplay depends on user interaction and browser policies\n */\nexport const supportsAutoplay = async (): Promise<boolean> => {\n  if (typeof window === 'undefined') return false;\n  \n  try {\n    const video = document.createElement('video');\n    video.muted = true;\n    video.src = 'data:video/mp4;base64,AAAAHGZ0eXBpc29tAAACAGlzb21pc28yYXZjMQAAAAhmcmVlAAAAG21kYXQAAAGzABAHAAABthADAowdbb9/AAAC6W1vb3YAAABsbXZoZAAAAAB8JbCAfCWwgAAAA+gAAAAAAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIVdHJhawAAAFx0a2hkAAAAD3wlsIB8JbCAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAIAAAACAAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA==';\n    \n    const promise = video.play();\n    if (promise) {\n      await promise;\n      video.pause();\n      return true;\n    }\n    return false;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Get comprehensive browser capabilities\n */\n/**\n * Check if a video format is supported by the browser\n * This function is safe for SSR environments\n */\nexport const isVideoFormatSupported = (url: string): boolean => {\n  // Return true during SSR to avoid hydration mismatches\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    return true;\n  }\n\n  const video = document.createElement('video');\n  \n  // Extract file extension\n  const extension = url.split('.').pop()?.toLowerCase().split('?')[0];\n  \n  switch (extension) {\n    case 'mp4':\n      return video.canPlayType('video/mp4') !== '';\n    case 'webm':\n      return video.canPlayType('video/webm') !== '' || \n             video.canPlayType('video/webm; codecs=\"vp8\"') !== '' ||\n             video.canPlayType('video/webm; codecs=\"vp9\"') !== '';\n    case 'ogg':\n      return video.canPlayType('video/ogg') !== '';\n    case 'avi':\n      return false; // AVI is generally not supported in browsers\n    case 'mov':\n      return video.canPlayType('video/quicktime') !== '';\n    default:\n      return true; // Assume supported for unknown formats\n  }\n};\n\nexport const getBrowserCapabilities = async (): Promise<BrowserCapabilities> => {\n  const capabilities: BrowserCapabilities = {\n    hasNativeHls: hasNativeHlsSupport(),\n    hasHlsJs: hasHlsJsSupport(),\n    hasDashJs: hasDashJsSupport(),\n    isMobile: isMobileDevice(),\n    isIOS: isIOSDevice(),\n    isAndroid: isAndroidDevice(),\n    supportsInlinePlayback: true, // Most modern browsers support this\n    supportsAutoplay: await supportsAutoplay(),\n    supportsPictureInPicture: supportsPictureInPicture(),\n  };\n\n  return capabilities;\n};\n\n/**\n * Get optimal streaming strategy based on browser capabilities\n */\nexport const getStreamingStrategy = (\n  capabilities: BrowserCapabilities,\n  streamUrl: string\n): 'native' | 'hlsjs' | 'dashjs' | 'direct' | 'unsupported' => {\n  console.log('VideoEngine: Analyzing stream URL:', streamUrl);\n  \n  const isHlsUrl = streamUrl.includes('.m3u8');\n  const isDashUrl = streamUrl.includes('.mpd');\n  const isDirectVideo = streamUrl.match(/\\.(mp4|webm|ogg|avi|mov)(\\?|$)/i);\n\n  console.log('VideoEngine: Format detection:', {\n    isHlsUrl,\n    isDashUrl,\n    isDirectVideo: !!isDirectVideo,\n    capabilities: {\n      hasNativeHls: capabilities.hasNativeHls,\n      hasHlsJs: capabilities.hasHlsJs,\n      hasDashJs: capabilities.hasDashJs,\n      isIOS: capabilities.isIOS\n    }\n  });\n\n  if (isHlsUrl) {\n    if (capabilities.hasNativeHls && capabilities.isIOS) {\n      console.log('VideoEngine: Using native HLS strategy');\n      return 'native';\n    }\n    if (capabilities.hasHlsJs) {\n      console.log('VideoEngine: Using HLS.js strategy');\n      return 'hlsjs';\n    }\n    console.log('VideoEngine: HLS not supported');\n  }\n\n  if (isDashUrl && capabilities.hasDashJs) {\n    console.log('VideoEngine: Using DASH.js strategy');\n    return 'dashjs';\n  }\n\n  // For direct video files (MP4, WebM, etc.)\n  if (isDirectVideo) {\n    // Check if the browser supports this video format\n    const isSupported = isVideoFormatSupported(streamUrl);\n    console.log('VideoEngine: Direct video format support check:', {\n      url: streamUrl,\n      isSupported\n    });\n    \n    if (isSupported) {\n      console.log('VideoEngine: Using direct video strategy');\n      return 'direct';\n    } else {\n      console.log('VideoEngine: Direct video format not supported by browser');\n      return 'unsupported';\n    }\n  }\n\n  console.log('VideoEngine: Unsupported format');\n  return 'unsupported';\n};\n","/**\n * Core video engine that handles different streaming protocols\n * Supports native HLS, HLS.js, and Dash.js with automatic fallback\n */\n\nimport { getBrowserCapabilities, getStreamingStrategy, type BrowserCapabilities } from './compatibility';\n\nexport interface VideoEngineConfig {\n  src: string;\n  autoplay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  poster?: string;\n  playsInline?: boolean;\n}\n\nexport interface VideoEngineEvents {\n  onReady: () => void;\n  onPlay: () => void;\n  onPause: () => void;\n  onTimeUpdate: (currentTime: number, duration: number) => void;\n  onProgress: (buffered: number) => void;\n  onVolumeChange: (volume: number, muted: boolean) => void;\n  onQualityChange: (quality: string) => void;\n  onError: (error: Error) => void;\n  onLoadStart: () => void;\n  onLoadEnd: () => void;\n}\n\nexport class VideoEngine {\n  private videoElement: HTMLVideoElement;\n  private hlsInstance?: any; // HLS.js instance\n  private dashInstance?: any; // Dash.js MediaPlayer instance\n  private capabilities?: BrowserCapabilities;\n  private currentStrategy?: string;\n  private events: Partial<VideoEngineEvents> = {};\n\n  constructor(videoElement: HTMLVideoElement, events: Partial<VideoEngineEvents> = {}) {\n    this.videoElement = videoElement;\n    this.events = events;\n    this.setupVideoElementEvents();\n  }\n\n  /**\n   * Initialize the video engine with capabilities detection\n   */\n  async initialize(): Promise<void> {\n    try {\n      console.log('Getting browser capabilities...');\n      this.capabilities = await getBrowserCapabilities();\n      console.log('Browser capabilities:', this.capabilities);\n      this.events.onReady?.();\n    } catch (error) {\n      console.error('Failed to initialize video engine:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load a video source\n   */\n  async loadSource(config: VideoEngineConfig): Promise<void> {\n    // Auto-initialize if not done yet\n    if (!this.capabilities) {\n      await this.initialize();\n    }\n\n    // Ensure capabilities are available\n    if (!this.capabilities) {\n      throw new Error('Failed to initialize video engine capabilities');\n    }\n\n    // Clean up existing instances\n    this.cleanup();\n\n    // Set video element properties\n    this.videoElement.autoplay = config.autoplay ?? false;\n    this.videoElement.muted = config.muted ?? false;\n    this.videoElement.loop = config.loop ?? false;\n    this.videoElement.playsInline = config.playsInline ?? true;\n    \n    if (config.poster) {\n      this.videoElement.poster = config.poster;\n    }\n\n    // Determine streaming strategy\n    const strategy = getStreamingStrategy(this.capabilities, config.src);\n    this.currentStrategy = strategy;\n\n    this.events.onLoadStart?.();\n\n    try {\n      switch (strategy) {\n        case 'native':\n          await this.loadNativeHls(config.src);\n          break;\n        case 'hlsjs':\n          await this.loadHlsJs(config.src);\n          break;\n        case 'dashjs':\n          await this.loadDashJs(config.src);\n          break;\n        case 'direct':\n          await this.loadDirectVideo(config.src);\n          break;\n        case 'unsupported':\n          throw new Error(`Unsupported video format. This browser cannot play: ${config.src}`);\n        default:\n          throw new Error(`Unknown streaming strategy: ${strategy} for ${config.src}`);\n      }\n      \n      this.events.onLoadEnd?.();\n    } catch (error) {\n      this.events.onError?.(error as Error);\n    }\n  }\n\n  /**\n   * Load video using native HLS support (mainly iOS Safari)\n   */\n  private async loadNativeHls(src: string): Promise<void> {\n    this.videoElement.src = src;\n    return new Promise((resolve, reject) => {\n      const onLoadedData = () => {\n        this.videoElement.removeEventListener('loadeddata', onLoadedData);\n        this.videoElement.removeEventListener('error', onError);\n        resolve();\n      };\n      \n      const onError = () => {\n        this.videoElement.removeEventListener('loadeddata', onLoadedData);\n        this.videoElement.removeEventListener('error', onError);\n        reject(new Error('Failed to load native HLS stream'));\n      };\n\n      this.videoElement.addEventListener('loadeddata', onLoadedData);\n      this.videoElement.addEventListener('error', onError);\n    });\n  }\n\n  /**\n   * Load direct video file (MP4, WebM, etc.)\n   */\n  private loadDirectVideo = async (src: string): Promise<void> => {\n    console.log('VideoEngine: Loading direct video file:', src);\n    this.videoElement.src = src;\n    \n    return new Promise((resolve, reject) => {\n      const onLoadedData = () => {\n        this.videoElement.removeEventListener('loadeddata', onLoadedData);\n        this.videoElement.removeEventListener('error', onError);\n        this.videoElement.removeEventListener('loadstart', onLoadStart);\n        console.log('VideoEngine: Direct video loaded successfully');\n        resolve();\n      };\n      \n      const onError = (event: Event) => {\n        this.videoElement.removeEventListener('loadeddata', onLoadedData);\n        this.videoElement.removeEventListener('error', onError);\n        this.videoElement.removeEventListener('loadstart', onLoadStart);\n        \n        const error = this.videoElement.error;\n        let errorMessage = 'Failed to load direct video file';\n        \n        if (error) {\n          switch (error.code) {\n            case error.MEDIA_ERR_ABORTED:\n              errorMessage = 'Video loading was aborted';\n              break;\n            case error.MEDIA_ERR_NETWORK:\n              errorMessage = 'Network error occurred while loading video';\n              break;\n            case error.MEDIA_ERR_DECODE:\n              errorMessage = 'Video decoding error occurred';\n              break;\n            case error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n              errorMessage = 'Video format not supported or file not found';\n              break;\n            default:\n              errorMessage = `Video error: ${error.message || 'Unknown error'}`;\n          }\n        }\n        \n        console.error('VideoEngine: Direct video load failed:', errorMessage, event);\n        console.error('VideoEngine: Failed URL:', src);\n        reject(new Error(`${errorMessage}. Please try a different video.`));\n      };\n\n      const onLoadStart = () => {\n        console.log('VideoEngine: Started loading direct video');\n      };\n\n      this.videoElement.addEventListener('loadeddata', onLoadedData);\n      this.videoElement.addEventListener('error', onError);\n      this.videoElement.addEventListener('loadstart', onLoadStart);\n      \n      // Set a timeout for loading\n      const timeout = setTimeout(() => {\n        this.videoElement.removeEventListener('loadeddata', onLoadedData);\n        this.videoElement.removeEventListener('error', onError);\n        this.videoElement.removeEventListener('loadstart', onLoadStart);\n        reject(new Error('Video loading timeout (30s)'));\n      }, 30000);\n\n      // Clear timeout when promise resolves\n      const originalResolve = resolve;\n      resolve = () => {\n        clearTimeout(timeout);\n        originalResolve();\n      };\n\n      const originalReject = reject;\n      reject = (error: Error) => {\n        clearTimeout(timeout);\n        originalReject(error);\n      };\n      \n      // Force load\n      this.videoElement.load();\n    });\n  }\n\n  /**\n   * Load video using HLS.js\n   */\n  private async loadHlsJs(src: string): Promise<void> {\n    try {\n      const Hls = (await import('hls.js')).default;\n      \n      if (!Hls.isSupported()) {\n        throw new Error('HLS.js is not supported in this browser');\n      }\n\n      this.hlsInstance = new Hls({\n        enableWorker: true,\n        lowLatencyMode: false,\n        backBufferLength: 90,\n      });\n\n      return new Promise((resolve, reject) => {\n        const hls = this.hlsInstance!;\n\n        hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          resolve();\n        });\n\n        hls.on(Hls.Events.ERROR, (event: any, data: any) => {\n          if (data.fatal) {\n            reject(new Error(`HLS.js fatal error: ${data.type} - ${data.details}`));\n          }\n        });\n\n        hls.on(Hls.Events.LEVEL_SWITCHED, (event: any, data: any) => {\n          const level = hls.levels[data.level];\n          this.events.onQualityChange?.(level.height ? `${level.height}p` : 'auto');\n        });\n\n        hls.loadSource(src);\n        hls.attachMedia(this.videoElement);\n      });\n    } catch (error) {\n      throw new Error('Failed to load HLS.js');\n    }\n  }\n\n  /**\n   * Load video using Dash.js\n   */\n  private async loadDashJs(src: string): Promise<void> {\n    try {\n      const dashjs = await import('dashjs');\n      this.dashInstance = dashjs.MediaPlayer().create();\n      \n      return new Promise((resolve, reject) => {\n        const dash = this.dashInstance!;\n\n        dash.on('streamInitialized', () => {\n          resolve();\n        });\n\n        dash.on('error', (error: any) => {\n          reject(new Error(`Dash.js error: ${error.error}`));\n        });\n\n        dash.initialize(this.videoElement, src, false);\n      });\n    } catch (error) {\n      throw new Error('Dash.js failed to load');\n    }\n  }\n\n  /**\n   * Setup video element event listeners\n   */\n  private setupVideoElementEvents(): void {\n    this.videoElement.addEventListener('play', () => {\n      this.events.onPlay?.();\n    });\n\n    this.videoElement.addEventListener('pause', () => {\n      this.events.onPause?.();\n    });\n\n    this.videoElement.addEventListener('timeupdate', () => {\n      this.events.onTimeUpdate?.(\n        this.videoElement.currentTime,\n        this.videoElement.duration || 0\n      );\n    });\n\n    this.videoElement.addEventListener('progress', () => {\n      const buffered = this.getBufferedPercentage();\n      this.events.onProgress?.(buffered);\n    });\n\n    this.videoElement.addEventListener('volumechange', () => {\n      this.events.onVolumeChange?.(\n        this.videoElement.volume,\n        this.videoElement.muted\n      );\n    });\n\n    this.videoElement.addEventListener('error', () => {\n      this.events.onError?.(new Error('Video element error'));\n    });\n  }\n\n  /**\n   * Get buffered percentage\n   */\n  private getBufferedPercentage(): number {\n    const buffered = this.videoElement.buffered;\n    const duration = this.videoElement.duration;\n    \n    if (buffered.length === 0 || !duration) return 0;\n    \n    const bufferedEnd = buffered.end(buffered.length - 1);\n    return (bufferedEnd / duration) * 100;\n  }\n\n  /**\n   * Get available quality levels\n   */\n  getQualityLevels(): Array<{ id: string; label: string; height?: number }> {\n    if (this.hlsInstance) {\n      return this.hlsInstance.levels.map((level: any, index: number) => ({\n        id: index.toString(),\n        label: level.height ? `${level.height}p` : `Level ${index}`,\n        height: level.height,\n      }));\n    }\n\n    if (this.dashInstance) {\n      try {\n        const bitrateInfo = this.dashInstance.getBitrateInfoListFor('video');\n        return bitrateInfo.map((info: any, index: number) => ({\n          id: index.toString(),\n          label: info.height ? `${info.height}p` : `${Math.round(info.bitrate / 1000)}k`,\n          height: info.height,\n        }));\n      } catch {\n        return [];\n      }\n    }\n\n    return [];\n  }\n\n  /**\n   * Set quality level\n   */\n  setQuality(qualityId: string): void {\n    if (this.hlsInstance) {\n      const levelIndex = parseInt(qualityId);\n      this.hlsInstance.currentLevel = levelIndex;\n    }\n\n    if (this.dashInstance) {\n      try {\n        const qualityIndex = parseInt(qualityId);\n        this.dashInstance.setQualityFor('video', qualityIndex);\n      } catch (error) {\n        console.warn('Failed to set quality:', error);\n      }\n    }\n  }\n\n  /**\n   * Clean up instances and remove event listeners\n   */\n  cleanup(): void {\n    if (this.hlsInstance) {\n      this.hlsInstance.destroy();\n      this.hlsInstance = undefined;\n    }\n\n    if (this.dashInstance) {\n      this.dashInstance.reset();\n      this.dashInstance = undefined;\n    }\n  }\n\n  /**\n   * Get current streaming strategy\n   */\n  getCurrentStrategy(): string | undefined {\n    return this.currentStrategy;\n  }\n\n  /**\n   * Get browser capabilities\n   */\n  getCapabilities(): BrowserCapabilities | undefined {\n    return this.capabilities;\n  }\n}\n","/**\n * Touch and gesture handling hook for mobile video player\n * Supports tap to play/pause, double tap to seek, swipe gestures\n */\n\nimport { useCallback, useRef, useState, useEffect } from 'react';\n\nexport interface GestureConfig {\n  enableTapToPlay?: boolean;\n  enableDoubleTapSeek?: boolean;\n  enableSwipeVolume?: boolean;\n  enableSwipeBrightness?: boolean;\n  seekAmount?: number; // seconds to seek on double tap\n  volumeSensitivity?: number;\n  brightnessSensitivity?: number;\n}\n\nexport interface GestureCallbacks {\n  onTap?: () => void;\n  onDoubleTap?: (direction: 'left' | 'right') => void;\n  onSwipeVolume?: (delta: number) => void;\n  onSwipeBrightness?: (delta: number) => void;\n  onPinchZoom?: (scale: number) => void;\n}\n\ninterface TouchState {\n  startX: number;\n  startY: number;\n  startTime: number;\n  lastTapTime: number;\n  tapCount: number;\n  isActive: boolean;\n}\n\nconst DEFAULT_CONFIG: Required<GestureConfig> = {\n  enableTapToPlay: true,\n  enableDoubleTapSeek: true,\n  enableSwipeVolume: true,\n  enableSwipeBrightness: false,\n  seekAmount: 10,\n  volumeSensitivity: 0.02,\n  brightnessSensitivity: 0.02,\n};\n\nexport const useVideoGestures = (\n  elementRef: React.RefObject<HTMLElement | null>,\n  callbacks: GestureCallbacks,\n  config: GestureConfig = {}\n) => {\n  const mergedConfig = { ...DEFAULT_CONFIG, ...config };\n  const touchState = useRef<TouchState>({\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    lastTapTime: 0,\n    tapCount: 0,\n    isActive: false,\n  });\n\n  const [isGestureActive, setIsGestureActive] = useState(false);\n\n  const handleTouchStart = useCallback((event: TouchEvent) => {\n    if (event.touches.length === 1) {\n      const touch = event.touches[0];\n      const now = Date.now();\n      \n      touchState.current = {\n        startX: touch.clientX,\n        startY: touch.clientY,\n        startTime: now,\n        lastTapTime: touchState.current.lastTapTime,\n        tapCount: now - touchState.current.lastTapTime < 300 ? touchState.current.tapCount + 1 : 1,\n        isActive: true,\n      };\n      \n      setIsGestureActive(true);\n    }\n  }, []);\n\n  const handleTouchMove = useCallback((event: TouchEvent) => {\n    if (!touchState.current.isActive || event.touches.length !== 1) return;\n\n    const touch = event.touches[0];\n    const deltaX = touch.clientX - touchState.current.startX;\n    const deltaY = touch.clientY - touchState.current.startY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    // Prevent scrolling if we're handling gestures\n    if (distance > 10) {\n      event.preventDefault();\n    }\n\n    // Vertical swipe for volume (right side) or brightness (left side)\n    if (Math.abs(deltaY) > 20 && Math.abs(deltaX) < 50) {\n      const element = elementRef.current;\n      if (!element) return;\n\n      const rect = element.getBoundingClientRect();\n      const isRightSide = touch.clientX > rect.left + rect.width / 2;\n\n      if (isRightSide && mergedConfig.enableSwipeVolume) {\n        const volumeDelta = -deltaY * mergedConfig.volumeSensitivity;\n        callbacks.onSwipeVolume?.(volumeDelta);\n      } else if (!isRightSide && mergedConfig.enableSwipeBrightness) {\n        const brightnessDelta = -deltaY * mergedConfig.brightnessSensitivity;\n        callbacks.onSwipeBrightness?.(brightnessDelta);\n      }\n    }\n  }, [elementRef, callbacks, mergedConfig]);\n\n  const handleTouchEnd = useCallback((event: TouchEvent) => {\n    if (!touchState.current.isActive) return;\n\n    const now = Date.now();\n    const duration = now - touchState.current.startTime;\n    const tapCount = touchState.current.tapCount;\n\n    touchState.current.isActive = false;\n    setIsGestureActive(false);\n\n    // Only handle taps for short duration touches\n    if (duration < 300) {\n      if (tapCount === 1) {\n        // Single tap - delay to check for double tap\n        setTimeout(() => {\n          if (touchState.current.tapCount === 1 && mergedConfig.enableTapToPlay) {\n            callbacks.onTap?.();\n          }\n        }, 300);\n      } else if (tapCount === 2 && mergedConfig.enableDoubleTapSeek) {\n        // Double tap - determine direction based on touch position\n        const element = elementRef.current;\n        if (element) {\n          const rect = element.getBoundingClientRect();\n          const isLeftSide = touchState.current.startX < rect.left + rect.width / 2;\n          callbacks.onDoubleTap?.(isLeftSide ? 'left' : 'right');\n        }\n        \n        // Reset tap count after double tap\n        touchState.current.tapCount = 0;\n      }\n    }\n\n    touchState.current.lastTapTime = now;\n  }, [elementRef, callbacks, mergedConfig]);\n\n  // Pinch to zoom (for future enhancement)\n  const handleTouchPinch = useCallback((event: TouchEvent) => {\n    if (event.touches.length === 2) {\n      // Calculate pinch scale\n      const touch1 = event.touches[0];\n      const touch2 = event.touches[1];\n      const distance = Math.sqrt(\n        Math.pow(touch2.clientX - touch1.clientX, 2) + \n        Math.pow(touch2.clientY - touch1.clientY, 2)\n      );\n      \n      // This would need initial distance tracking for proper scale calculation\n      // callbacks.onPinchZoom?.(scale);\n    }\n  }, [callbacks]);\n\n  // Mouse events for desktop compatibility\n  const handleMouseClick = useCallback((event: MouseEvent) => {\n    if (!mergedConfig.enableTapToPlay) return;\n    \n    const now = Date.now();\n    const timeDiff = now - touchState.current.lastTapTime;\n    \n    if (timeDiff < 300) {\n      // Double click\n      if (mergedConfig.enableDoubleTapSeek) {\n        const element = elementRef.current;\n        if (element) {\n          const rect = element.getBoundingClientRect();\n          const isLeftSide = event.clientX < rect.left + rect.width / 2;\n          callbacks.onDoubleTap?.(isLeftSide ? 'left' : 'right');\n        }\n      }\n    } else {\n      // Single click\n      callbacks.onTap?.();\n    }\n    \n    touchState.current.lastTapTime = now;\n  }, [elementRef, callbacks, mergedConfig]);\n\n  // Set up event listeners\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    // Touch events\n    element.addEventListener('touchstart', handleTouchStart, { passive: false });\n    element.addEventListener('touchmove', handleTouchMove, { passive: false });\n    element.addEventListener('touchend', handleTouchEnd, { passive: true });\n\n    // Mouse events for desktop\n    element.addEventListener('click', handleMouseClick);\n\n    return () => {\n      element.removeEventListener('touchstart', handleTouchStart);\n      element.removeEventListener('touchmove', handleTouchMove);\n      element.removeEventListener('touchend', handleTouchEnd);\n      element.removeEventListener('click', handleMouseClick);\n    };\n  }, [elementRef, handleTouchStart, handleTouchMove, handleTouchEnd, handleMouseClick]);\n\n  return {\n    isGestureActive,\n    config: mergedConfig,\n  };\n};\n","'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { PlayerConfiguration, PlayerPresets, mergePlayerConfig } from '@/types/player-config';\n\ninterface PlayerConfigContextType {\n  config: PlayerConfiguration;\n  updateConfig: (newConfig: Partial<PlayerConfiguration>) => void;\n  resetConfig: () => void;\n  loadPreset: (presetName: string) => void;\n  saveConfig: (name: string) => void;\n  loadSavedConfig: (name: string) => void;\n  getSavedConfigs: () => string[];\n}\n\nconst PlayerConfigContext = createContext<PlayerConfigContextType | undefined>(undefined);\n\ninterface PlayerConfigProviderProps {\n  children: React.ReactNode;\n  defaultConfig?: PlayerConfiguration;\n  storageKey?: string;\n}\n\nexport const PlayerConfigProvider: React.FC<PlayerConfigProviderProps> = ({\n  children,\n  defaultConfig = PlayerPresets.youtube,\n  storageKey = 'nextjs-videoplayer-config',\n}) => {\n  const [config, setConfig] = useState<PlayerConfiguration>(defaultConfig);\n\n  // Load saved config on mount\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const saved = localStorage.getItem(storageKey);\n      if (saved) {\n        try {\n          const savedConfig = JSON.parse(saved);\n          setConfig(mergePlayerConfig(defaultConfig, savedConfig));\n        } catch (error) {\n          console.warn('Failed to load saved player config:', error);\n        }\n      }\n    }\n  }, [defaultConfig, storageKey]);\n\n  // Save config to localStorage\n  const saveConfigToStorage = (newConfig: PlayerConfiguration) => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(storageKey, JSON.stringify(newConfig));\n    }\n  };\n\n  const updateConfig = (newConfig: Partial<PlayerConfiguration>) => {\n    const updatedConfig = mergePlayerConfig(config, newConfig);\n    setConfig(updatedConfig);\n    saveConfigToStorage(updatedConfig);\n  };\n\n  const resetConfig = () => {\n    setConfig(defaultConfig);\n    saveConfigToStorage(defaultConfig);\n  };\n\n  const loadPreset = (presetName: string) => {\n    const preset = PlayerPresets[presetName];\n    if (preset) {\n      setConfig(preset);\n      saveConfigToStorage(preset);\n    } else {\n      console.warn(`Preset \"${presetName}\" not found`);\n    }\n  };\n\n  const saveConfig = (name: string) => {\n    if (typeof window !== 'undefined') {\n      const savedConfigs = JSON.parse(localStorage.getItem(`${storageKey}-saved`) || '{}');\n      savedConfigs[name] = config;\n      localStorage.setItem(`${storageKey}-saved`, JSON.stringify(savedConfigs));\n    }\n  };\n\n  const loadSavedConfig = (name: string) => {\n    if (typeof window !== 'undefined') {\n      const savedConfigs = JSON.parse(localStorage.getItem(`${storageKey}-saved`) || '{}');\n      if (savedConfigs[name]) {\n        setConfig(savedConfigs[name]);\n        saveConfigToStorage(savedConfigs[name]);\n      }\n    }\n  };\n\n  const getSavedConfigs = (): string[] => {\n    if (typeof window !== 'undefined') {\n      const savedConfigs = JSON.parse(localStorage.getItem(`${storageKey}-saved`) || '{}');\n      return Object.keys(savedConfigs);\n    }\n    return [];\n  };\n\n  return (\n    <PlayerConfigContext.Provider\n      value={{\n        config,\n        updateConfig,\n        resetConfig,\n        loadPreset,\n        saveConfig,\n        loadSavedConfig,\n        getSavedConfigs,\n      }}\n    >\n      {children}\n    </PlayerConfigContext.Provider>\n  );\n};\n\nexport const usePlayerConfig = () => {\n  const context = useContext(PlayerConfigContext);\n  if (context === undefined) {\n    throw new Error('usePlayerConfig must be used within a PlayerConfigProvider');\n  }\n  return context;\n};\n\n// Hook for easy preset switching\nexport const usePlayerPresets = () => {\n  const { loadPreset } = usePlayerConfig();\n  \n  return {\n    presets: Object.keys(PlayerPresets),\n    loadPreset,\n    getPresetConfig: (name: string) => PlayerPresets[name],\n  };\n};\n","/**\n * Comprehensive video player configuration types\n * Enables granular control over every aspect of the player\n */\n\nexport interface PlayerTheme {\n  primary?: string;\n  secondary?: string;\n  accent?: string;\n  background?: string;\n  text?: string;\n  controlsBackground?: string;\n  progressColor?: string;\n  bufferColor?: string;\n}\n\nexport interface ControlsVisibility {\n  playPause?: boolean;\n  progress?: boolean;\n  volume?: boolean;\n  quality?: boolean;\n  fullscreen?: boolean;\n  pictureInPicture?: boolean;\n  theaterMode?: boolean;\n  playbackRate?: boolean;\n  keyboardShortcuts?: boolean;\n  settings?: boolean;\n  time?: boolean;\n}\n\nexport interface KeyboardShortcutsConfig {\n  enabled?: boolean;\n  customKeys?: {\n    playPause?: string[];\n    fullscreen?: string[];\n    mute?: string[];\n    pictureInPicture?: string[];\n    theaterMode?: string[];\n    seekForward?: string[];\n    seekBackward?: string[];\n    volumeUp?: string[];\n    volumeDown?: string[];\n    restart?: string[];\n    jumpToPercent?: string[];\n  };\n}\n\nexport interface GesturesConfig {\n  enabled?: boolean;\n  tapToPlay?: boolean;\n  doubleTapSeek?: boolean;\n  swipeVolume?: boolean;\n  pinchToZoom?: boolean;\n  seekOnSwipe?: boolean;\n}\n\nexport interface AutoBehavior {\n  autoPlay?: boolean;\n  autoHideControls?: boolean;\n  autoHideDelay?: number;\n  autoQuality?: boolean;\n  autoPictureInPictureOnScroll?: boolean;\n  autoTheaterOnLandscape?: boolean;\n  rememberVolume?: boolean;\n  rememberPlaybackRate?: boolean;\n}\n\nexport interface AnalyticsConfig {\n  enabled?: boolean;\n  trackPlay?: boolean;\n  trackPause?: boolean;\n  trackSeek?: boolean;\n  trackQualityChange?: boolean;\n  trackFullscreen?: boolean;\n  trackPictureInPicture?: boolean;\n  customEvents?: string[];\n}\n\nexport interface AdvancedFeatures {\n  chapters?: boolean;\n  subtitles?: boolean;\n  thumbnailPreview?: boolean;\n  miniPlayer?: boolean;\n  playlist?: boolean;\n  airPlay?: boolean;\n  chromecast?: boolean;\n  downloadButton?: boolean;\n  shareButton?: boolean;\n  loopButton?: boolean;\n}\n\nexport interface PlayerConfiguration {\n  // Basic settings\n  theme?: PlayerTheme;\n  \n  // Controls configuration\n  controls?: {\n    show?: boolean;\n    visibility?: ControlsVisibility;\n    position?: 'bottom' | 'top' | 'overlay' | 'external';\n    style?: 'youtube' | 'vimeo' | 'netflix' | 'minimal' | 'custom';\n    size?: 'small' | 'medium' | 'large';\n  };\n  \n  // Keyboard shortcuts\n  keyboard?: KeyboardShortcutsConfig;\n  \n  // Touch gestures\n  gestures?: GesturesConfig;\n  \n  // Auto behaviors\n  auto?: AutoBehavior;\n  \n  // Analytics\n  analytics?: AnalyticsConfig;\n  \n  // Advanced features\n  features?: AdvancedFeatures;\n  \n  // Responsive behavior\n  responsive?: {\n    enabled?: boolean;\n    breakpoints?: {\n      mobile?: number;\n      tablet?: number;\n      desktop?: number;\n    };\n    adaptiveControls?: boolean;\n    hideControlsOnMobile?: string[];\n  };\n  \n  // Performance\n  performance?: {\n    preload?: 'none' | 'metadata' | 'auto';\n    lazy?: boolean;\n    bufferAhead?: number;\n    maxBufferLength?: number;\n  };\n  \n  // Customization\n  customization?: {\n    css?: string;\n    className?: string;\n    hideDefaultStyles?: boolean;\n    customIcons?: { [key: string]: React.ComponentType };\n  };\n}\n\n// Preset configurations for different use cases\nexport const PlayerPresets: { [key: string]: PlayerConfiguration } = {\n  // YouTube-like experience\n  youtube: {\n    controls: {\n      show: true,\n      visibility: {\n        playPause: true,\n        progress: true,\n        volume: true,\n        quality: true,\n        fullscreen: true,\n        pictureInPicture: true,\n        theaterMode: true,\n        playbackRate: true,\n        keyboardShortcuts: true,\n        settings: true,\n        time: true,\n      },\n      style: 'youtube',\n      position: 'bottom',\n    },\n    keyboard: { enabled: true },\n    gestures: { enabled: true, tapToPlay: true, doubleTapSeek: true },\n    auto: { autoHideControls: true, autoHideDelay: 3000 },\n    features: { thumbnailPreview: true, chapters: true },\n  },\n\n  // Minimal player\n  minimal: {\n    controls: {\n      show: true,\n      visibility: {\n        playPause: true,\n        progress: true,\n        fullscreen: true,\n      },\n      style: 'minimal',\n    },\n    keyboard: { enabled: false },\n    gestures: { enabled: true, tapToPlay: true },\n    auto: { autoHideControls: true, autoHideDelay: 2000 },\n  },\n\n  // No controls (video background)\n  background: {\n    controls: { show: false },\n    keyboard: { enabled: false },\n    gestures: { enabled: false },\n    auto: { autoPlay: true },\n  },\n\n  // Netflix-style\n  netflix: {\n    controls: {\n      show: true,\n      visibility: {\n        playPause: true,\n        progress: true,\n        volume: true,\n        fullscreen: true,\n        playbackRate: true,\n        time: true,\n      },\n      style: 'netflix',\n    },\n    theme: {\n      primary: '#e50914',\n      controlsBackground: 'rgba(0,0,0,0.7)',\n    },\n    auto: { autoHideControls: true, autoHideDelay: 4000 },\n  },\n\n  // Mobile-optimized\n  mobile: {\n    controls: {\n      show: true,\n      visibility: {\n        playPause: true,\n        progress: true,\n        fullscreen: true,\n        volume: false, // Hidden on mobile\n        quality: true,\n      },\n      size: 'large',\n    },\n    gestures: { \n      enabled: true, \n      tapToPlay: true, \n      doubleTapSeek: true,\n      swipeVolume: true \n    },\n    responsive: {\n      enabled: true,\n      adaptiveControls: true,\n      hideControlsOnMobile: ['volume', 'keyboardShortcuts'],\n    },\n  },\n\n  // Custom minimal with only play/pause\n  playOnly: {\n    controls: {\n      show: true,\n      visibility: {\n        playPause: true,\n        progress: false,\n        volume: false,\n        quality: false,\n        fullscreen: false,\n        pictureInPicture: false,\n        theaterMode: false,\n        playbackRate: false,\n        keyboardShortcuts: false,\n        settings: false,\n        time: false,\n      },\n      style: 'minimal',\n    },\n    keyboard: { enabled: false },\n    gestures: { enabled: true, tapToPlay: true },\n  },\n};\n\n// Helper function to merge configurations\nexport const mergePlayerConfig = (\n  base: PlayerConfiguration = {},\n  override: PlayerConfiguration = {}\n): PlayerConfiguration => {\n  return {\n    theme: { ...base.theme, ...override.theme },\n    controls: {\n      ...base.controls,\n      ...override.controls,\n      visibility: {\n        ...base.controls?.visibility,\n        ...override.controls?.visibility,\n      },\n    },\n    keyboard: { ...base.keyboard, ...override.keyboard },\n    gestures: { ...base.gestures, ...override.gestures },\n    auto: { ...base.auto, ...override.auto },\n    analytics: { ...base.analytics, ...override.analytics },\n    features: { ...base.features, ...override.features },\n    responsive: { ...base.responsive, ...override.responsive },\n    performance: { ...base.performance, ...override.performance },\n    customization: { ...base.customization, ...override.customization },\n  };\n};\n","/**\n * Main video player component\n * Combines video engine, controls, and gesture handling\n */\n\n'use client';\n\nimport React, { useRef, useEffect, forwardRef, useCallback } from 'react';\nimport { cn } from '@/lib/utils';\nimport { useVideoPlayer } from '@/hooks/use-video-player';\nimport { useVideoGestures } from '@/hooks/use-video-gestures';\nimport { VideoControls } from '@/components/controls/video-controls';\nimport { LoadingSpinner } from '@/components/player/loading-spinner';\nimport { ErrorDisplay } from '@/components/player/error-display';\nimport type { VideoEngineConfig } from '@/core/video-engine';\n\nexport interface VideoPlayerProps {\n  src: string;\n  poster?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  playsInline?: boolean;\n  className?: string;\n  controls?: {\n    show?: boolean;\n    fullscreen?: boolean;\n    quality?: boolean;\n    volume?: boolean;\n    progress?: boolean;\n    playPause?: boolean;\n    playbackRate?: boolean;\n    pictureInPicture?: boolean;\n    theaterMode?: boolean;\n  };\n  gestures?: {\n    enabled?: boolean;\n    tapToPlay?: boolean;\n    doubleTapSeek?: boolean;\n    swipeVolume?: boolean;\n  };\n  plugins?: Array<(player: any) => void>;\n  onReady?: () => void;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onError?: (error: string) => void;\n  onTimeUpdate?: (currentTime: number, duration: number) => void;\n  onStateChange?: (state: any) => void;\n}\n\nexport const VideoPlayer = forwardRef<HTMLVideoElement, VideoPlayerProps>(({\n  src,\n  poster,\n  autoPlay = false,\n  muted = false,\n  loop = false,\n  playsInline = true,\n  className,\n  controls = {\n    show: true,\n    fullscreen: true,\n    quality: true,\n    volume: true,\n    progress: true,\n    playPause: true,\n    playbackRate: true,\n    pictureInPicture: true,\n    theaterMode: true,\n  },\n  gestures = {\n    enabled: true,\n    tapToPlay: true,\n    doubleTapSeek: true,\n    swipeVolume: true,\n  },\n  plugins = [],\n  onReady,\n  onPlay,\n  onPause,\n  onError,\n  onTimeUpdate,\n  onStateChange,\n}, ref) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [showControls, setShowControls] = React.useState(true);\n  const controlsTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Video player hook\n  const { state, controls: playerControls, qualityLevels, engine } = useVideoPlayer(videoRef, {\n    autoPlay,\n    muted,\n    volume: 1,\n  });\n\n  // Memoized callbacks to prevent infinite re-renders\n  const handlePlay = useCallback(() => {\n    onPlay?.();\n  }, [onPlay]);\n\n  const handlePause = useCallback(() => {\n    onPause?.();\n  }, [onPause]);\n\n  const handleError = useCallback((error: string) => {\n    onError?.(error);\n  }, [onError]);\n\n  const handleTimeUpdate = useCallback((currentTime: number, duration: number) => {\n    onTimeUpdate?.(currentTime, duration);\n  }, [onTimeUpdate]);\n\n  const handleStateChange = useCallback((newState: any) => {\n    onStateChange?.(newState);\n  }, [onStateChange]);\n\n  const handleReady = useCallback(() => {\n    onReady?.();\n  }, [onReady]);\n\n  // Gesture handling\n  const { isGestureActive } = useVideoGestures(\n    containerRef,\n    {\n      onTap: () => {\n        if (gestures.tapToPlay && controls.playPause && !state.isLoading) {\n          // Prevent rapid tap/pause cycles\n          if (state.isPlaying && !state.isPaused) {\n            playerControls.pause();\n          } else if (state.isPaused && !state.isPlaying) {\n            playerControls.play();\n          }\n        }\n        showControlsTemporarily();\n      },\n      onDoubleTap: (direction) => {\n        if (gestures.doubleTapSeek) {\n          const seekAmount = direction === 'left' ? -10 : 10;\n          const newTime = Math.max(0, Math.min(state.duration, state.currentTime + seekAmount));\n          playerControls.seek(newTime);\n        }\n      },\n      onSwipeVolume: (delta) => {\n        if (gestures.swipeVolume && controls.volume) {\n          const newVolume = Math.max(0, Math.min(1, state.volume + delta));\n          playerControls.setVolume(newVolume);\n        }\n      },\n    },\n    {\n      enableTapToPlay: gestures.tapToPlay,\n      enableDoubleTapSeek: gestures.doubleTapSeek,\n      enableSwipeVolume: gestures.swipeVolume,\n    }\n  );\n\n  // Load video source when engine is ready\n  useEffect(() => {\n    if (!src || !engine) return;\n\n    const config: VideoEngineConfig = {\n      src,\n      poster,\n      autoplay: autoPlay,\n      muted,\n      loop,\n      playsInline,\n    };\n\n    // Add a small delay to ensure engine is fully initialized\n    const timer = setTimeout(() => {\n      playerControls.load(config);\n    }, 50);\n\n    return () => clearTimeout(timer);\n  }, [src, poster, autoPlay, muted, loop, playsInline, engine]);\n\n  // Event callbacks\n  useEffect(() => {\n    if (state.isPlaying) {\n      handlePlay();\n    } else if (state.isPaused) {\n      handlePause();\n    }\n  }, [state.isPlaying, state.isPaused, handlePlay, handlePause]);\n\n  useEffect(() => {\n    if (state.error) {\n      handleError(state.error);\n    }\n  }, [state.error, handleError]);\n\n  useEffect(() => {\n    handleTimeUpdate(state.currentTime, state.duration);\n  }, [state.currentTime, state.duration, handleTimeUpdate]);\n\n  useEffect(() => {\n    handleStateChange(state);\n  }, [state, handleStateChange]);\n\n  useEffect(() => {\n    if (!state.isLoading && state.duration > 0) {\n      handleReady();\n    }\n  }, [state.isLoading, state.duration, handleReady]);\n\n  // Initialize plugins\n  useEffect(() => {\n    if (engine && plugins.length > 0) {\n      plugins.forEach(plugin => {\n        try {\n          plugin({ engine, state, controls: playerControls });\n        } catch (error) {\n          console.warn('Plugin initialization failed:', error);\n        }\n      });\n    }\n  }, [engine, plugins, state, playerControls]);\n\n  // Auto-hide controls\n  const showControlsTemporarily = React.useCallback(() => {\n    setShowControls(true);\n    \n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n    \n    if (state.isPlaying) {\n      controlsTimeoutRef.current = setTimeout(() => {\n        setShowControls(false);\n      }, 3000);\n    }\n  }, [state.isPlaying]);\n\n  // Mouse movement detection\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const handleMouseMove = () => {\n      showControlsTemporarily();\n    };\n\n    const handleMouseLeave = () => {\n      if (state.isPlaying) {\n        setShowControls(false);\n      }\n    };\n\n    container.addEventListener('mousemove', handleMouseMove);\n    container.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      container.removeEventListener('mousemove', handleMouseMove);\n      container.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [showControlsTemporarily, state.isPlaying]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Forward ref\n  React.useImperativeHandle(ref, () => videoRef.current!);\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\n        'relative w-full bg-black overflow-hidden group transition-all duration-300',\n        'focus-within:outline-none focus-within:ring-2 focus-within:ring-blue-500',\n        state.isFullscreen && 'fixed inset-0 z-50',\n        state.isTheaterMode && 'mx-auto max-w-none',\n        className\n      )}\n      style={{\n        aspectRatio: state.isFullscreen || state.isTheaterMode ? 'auto' : '16/9',\n        height: state.isTheaterMode ? '70vh' : 'auto',\n      }}\n    >\n      {/* Video Element */}\n      <video\n        ref={videoRef}\n        className=\"w-full h-full object-contain\"\n        playsInline={playsInline}\n        {...(playsInline && { 'webkit-playsinline': '' })}\n        poster={poster}\n        preload=\"metadata\"\n      />\n\n      {/* Loading Spinner */}\n      {state.isLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/50\">\n          <LoadingSpinner />\n        </div>\n      )}\n\n      {/* Error Display */}\n      {state.error && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/80\">\n          <ErrorDisplay error={state.error} onRetry={() => playerControls.load({ src })} />\n        </div>\n      )}\n\n      {/* Gesture Feedback */}\n      {isGestureActive && gestures.enabled && (\n        <div className=\"absolute inset-0 pointer-events-none\">\n          <div className=\"absolute inset-0 bg-white/10 animate-pulse\" />\n        </div>\n      )}\n\n      {/* Video Controls */}\n      {controls.show && (showControls || state.isPaused || !state.duration) && (\n        <VideoControls\n          state={state}\n          controls={playerControls}\n          qualityLevels={qualityLevels}\n          controlsConfig={controls}\n          onShow={() => setShowControls(true)}\n          onHide={() => setShowControls(false)}\n        />\n      )}\n    </div>\n  );\n});\n\nVideoPlayer.displayName = 'VideoPlayer';\n","'use client';\n\nimport React, { useState } from 'react';\nimport { ConfigurableVideoPlayer } from '@/components/player/configurable-video-player';\nimport { VideoSourceSelector, type VideoSource } from '@/components/demo/video-source-selector';\nimport { PlayerStats } from '@/components/demo/player-stats';\nimport { FeatureList } from '@/components/demo/feature-list';\nimport { PlayerConfigProvider } from '@/contexts/player-config-context';\nimport { VideoPlayerState } from '@/hooks/use-video-player';\n\nexport const VideoPlayerDemo: React.FC = () => {\n  const videoSources: VideoSource[] = [\n    {\n      id: 'bigbuck',\n      name: 'Big Buck Bunny (MP4)',\n      url: 'https://storage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n      format: 'MP4',\n      quality: 'HD',\n      size: '158MB',\n      description: 'High quality demo video',\n      features: ['MP4', 'HD Quality'],\n      poster: 'https://storage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg',\n    },\n    {\n      id: 'elephant',\n      name: 'Elephant Dream (MP4)',\n      url: 'https://storage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4',\n      format: 'MP4',\n      quality: 'HD',\n      size: '120MB',\n      description: 'Animation showcase',\n      features: ['MP4', 'Animation'],\n      poster: 'https://storage.googleapis.com/gtv-videos-bucket/sample/images/ElephantsDream.jpg',\n    },\n    {\n      id: 'sintel',\n      name: 'Sintel (MP4)',\n      url: 'https://storage.googleapis.com/gtv-videos-bucket/sample/Sintel.mp4',\n      format: 'MP4',\n      quality: 'HD',\n      size: '90MB',\n      description: 'Blender Foundation movie',\n      features: ['MP4', 'Short Film'],\n      poster: 'https://storage.googleapis.com/gtv-videos-bucket/sample/images/Sintel.jpg',\n    },\n  ];\n\n  const [selectedVideo, setSelectedVideo] = useState(videoSources[0]);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [playerState, setPlayerState] = useState<VideoPlayerState>({\n    isPlaying: false,\n    isPaused: true,\n    isLoading: false,\n    isMuted: false,\n    currentTime: 0,\n    duration: 0,\n    volume: 1,\n    buffered: 0,\n    quality: 'auto',\n    playbackRate: 1,\n    isFullscreen: false,\n    isPictureInPicture: false,\n    isTheaterMode: false,\n    error: null,\n    // Analytics data\n    playCount: 0,\n    totalWatchTime: 0,\n    bufferingTime: 0,\n    averageBitrate: 0,\n    qualityChanges: 0,\n  });\n\n  return (\n    <PlayerConfigProvider>\n      <div className=\"grid lg:grid-cols-3 gap-8\">\n        {/* Video Player */}\n        <div className=\"lg:col-span-2\">\n          <VideoSourceSelector\n            sources={videoSources}\n            selectedSource={selectedVideo}\n            onSourceChange={setSelectedVideo}\n            className=\"mb-6\"\n          />\n          \n          <ConfigurableVideoPlayer\n            src={selectedVideo.url}\n            poster={selectedVideo.poster}\n            autoPlay={false}\n            muted={false}\n            onReady={() => setIsPlayerReady(true)}\n            onStateChange={setPlayerState}\n            className=\"w-full shadow-2xl\"\n          />\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          <PlayerStats state={playerState} />\n          <FeatureList />\n        </div>\n      </div>\n    </PlayerConfigProvider>\n  );\n};\n","\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { FileVideo, Play, Download, Info, AlertTriangle } from 'lucide-react';\n\nexport interface VideoSource {\n  id: string;\n  name: string;\n  url: string;\n  format: string;\n  quality: string;\n  size: string;\n  description: string;\n  features: string[];\n  poster?: string; // Optional poster image URL\n  thumbnailUrl?: string; // Optional thumbnail preview URL\n  aspectRatio?: string; // Video aspect ratio (16/9, 9/16, 1/1, etc.)\n}\n\ninterface VideoSourceSelectorProps {\n  sources?: VideoSource[];\n  selectedSource?: VideoSource;\n  onSourceChange?: (source: VideoSource) => void;\n  videoSources?: VideoSource[];\n  selectedVideo?: VideoSource;\n  onVideoSelect?: (source: VideoSource) => void;\n  onSourceSelect?: (source: VideoSource) => Promise<void> | void;\n  currentSource?: string;\n  className?: string;\n}\n\n// Simple format support check that's SSR-safe\nconst isVideoFormatSupportedSimple = (url: string): boolean => {\n  if (typeof window === 'undefined') {\n    return true; // During SSR, assume all formats are supported\n  }\n  \n  // Basic format detection based on URL extension\n  const extension = url.split('.').pop()?.toLowerCase().split('?')[0];\n  \n  // Most common video formats\n  const supportedFormats = ['mp4', 'webm', 'ogg', 'm3u8', 'mpd'];\n  return supportedFormats.includes(extension || '');\n};\n\nconst videoSources: VideoSource[] = [\n  {\n    id: 'html5-test',\n    name: 'HTML5 Test Video',\n    url: 'https://www.w3schools.com/html/mov_bbb.mp4',\n    format: 'MP4',\n    quality: '320p',\n    size: '1.1MB',\n    description: 'W3Schools HTML5 test video - guaranteed to work',\n    features: ['Reliable', 'Small Size', 'Educational']\n  },\n  {\n    id: 'sintel-480p',\n    name: 'MP4 - Sintel (480p)',\n    url: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/Sintel.mp4',\n    format: 'MP4',\n    quality: '480p',\n    size: '17.2MB',\n    description: 'Blender Foundation short film - reliable Google storage',\n    features: ['Blender Foundation', 'Good Quality', 'Google CDN']\n  },\n  {\n    id: 'tears-steel-480p',\n    name: 'MP4 - Tears of Steel (480p)',\n    url: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/TearsOfSteel.mp4',\n    format: 'MP4',\n    quality: '480p',\n    size: '12.3MB',\n    description: 'Another Blender Foundation film from Google storage',\n    features: ['Blender Foundation', 'Sci-Fi', 'Google CDN']\n  },\n  {\n    id: 'elephant-dream',\n    name: 'MP4 - Elephant\\'s Dream',\n    url: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4',\n    format: 'MP4',\n    quality: '720p',\n    size: '18.9MB',\n    description: 'First open movie by Blender Foundation',\n    features: ['Open Source', 'Creative Commons', 'Google CDN']\n  },\n  {\n    id: 'mp4-big-buck-bunny',\n    name: 'MP4 - Big Buck Bunny',\n    url: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n    format: 'MP4',\n    quality: '720p',\n    size: '158MB',\n    description: 'Classic MP4 video file for compatibility testing',\n    features: ['Direct Download', 'Wide Compatibility', 'Single Quality']\n  },\n  {\n    id: 'hls-apple-basic',\n    name: 'HLS - Apple Basic Stream',\n    url: 'https://devstreaming-cdn.apple.com/videos/streaming/examples/img_bipbop_adv_example_fmp4/master.m3u8',\n    format: 'HLS (.m3u8)',\n    quality: 'Adaptive',\n    size: '~30s',\n    description: 'Apple\\'s official HLS test stream',\n    features: ['Apple Official', 'Multiple Qualities', 'Reliable']\n  }\n];\n\nexport const VideoSourceSelector: React.FC<VideoSourceSelectorProps> = ({\n  videoSources: propVideoSources,\n  selectedVideo,\n  onVideoSelect,\n  onSourceSelect,\n  currentSource,\n  className = \"\"\n}) => {\n  const [isLoading, setIsLoading] = useState<string | null>(null);\n  const [mounted, setMounted] = useState(false);\n  const [erroredSources, setErroredSources] = useState<Set<string>>(new Set());\n\n  // Use prop video sources or fallback to default\n  const sources = propVideoSources || videoSources;\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleSourceSelect = async (source: VideoSource) => {\n    if (isLoading) {\n      return; // Prevent double clicks\n    }\n    \n    console.log('Selecting video source:', source.name, source.url);\n    setIsLoading(source.id);\n    \n    // Remove from errored sources if user is retrying\n    if (erroredSources.has(source.id)) {\n      const newErroredSources = new Set(erroredSources);\n      newErroredSources.delete(source.id);\n      setErroredSources(newErroredSources);\n    }\n    \n    try {\n      // Call the appropriate callback\n      if (onVideoSelect) {\n        onVideoSelect(source);\n      } else if (onSourceSelect) {\n        await onSourceSelect(source);\n      }\n    } catch (error) {\n      console.error('Error selecting source:', error);\n      // Mark this source as errored\n      setErroredSources(prev => new Set([...prev, source.id]));\n    } finally {\n      // Clear loading state after a short delay\n      setTimeout(() => setIsLoading(null), 1000);\n    }\n  };\n\n  const getFormatColor = (format: string) => {\n    switch (format.toLowerCase()) {\n      case 'hls (.m3u8)':\n        return 'bg-blue-500 text-white';\n      case 'dash (.mpd)':\n        return 'bg-green-500 text-white';\n      case 'mp4':\n        return 'bg-purple-500 text-white';\n      case 'webm':\n        return 'bg-orange-500 text-white';\n      default:\n        return 'bg-gray-500 text-white';\n    }\n  };\n\n  const getQualityColor = (quality: string) => {\n    switch (quality.toLowerCase()) {\n      case 'adaptive':\n        return 'bg-emerald-500 text-white';\n      case '1080p':\n        return 'bg-blue-500 text-white';\n      case '720p':\n        return 'bg-cyan-500 text-white';\n      case '480p':\n        return 'bg-yellow-500 text-white';\n      default:\n        return 'bg-gray-500 text-white';\n    }\n  };\n\n  if (!mounted) {\n    return (\n      <div className={className}>\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <FileVideo className=\"h-5 w-5\" />\n              Video Format Showcase\n            </CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              Loading video formats...\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {[1, 2, 3, 4, 5, 6].map((i) => (\n                <div key={i} className=\"border rounded-lg p-4 animate-pulse\">\n                  <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded mb-2\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded\"></div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileVideo className=\"h-5 w-5\" />\n            Video Format Showcase\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Test different video formats and streaming protocols to explore all features\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {sources.map((source) => {\n              const isSupported = isVideoFormatSupportedSimple(source.url);\n              const hasError = erroredSources.has(source.id);\n              const isSelected = selectedVideo?.id === source.id || currentSource === source.url;\n              \n              return (\n                <div\n                  key={source.id}\n                  className={`border rounded-lg p-4 cursor-pointer transition-all hover:shadow-md ${\n                    isSelected\n                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-950'\n                      : hasError\n                        ? 'border-red-300 bg-red-50 dark:bg-red-950/30'\n                        : isSupported \n                          ? 'border-gray-200 hover:border-gray-300'\n                          : 'border-red-200 bg-red-50 dark:bg-red-950 opacity-75'\n                  } ${isLoading === source.id ? 'opacity-50 pointer-events-none' : ''}`}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if ((isSupported || hasError) && !isLoading) {\n                      handleSourceSelect(source);\n                    }\n                  }}\n                >\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-start justify-between\">\n                      <h3 className=\"font-medium text-sm leading-tight\">{source.name}</h3>\n                      <div className=\"flex items-center gap-1\">\n                        {currentSource === source.url && (\n                          <Play className=\"h-4 w-4 text-blue-500 flex-shrink-0\" />\n                        )}\n                        {hasError && (\n                          <AlertTriangle className=\"h-4 w-4 text-red-500 flex-shrink-0\" />\n                        )}\n                        {!isSupported && !hasError && (\n                          <AlertTriangle className=\"h-4 w-4 text-red-500 flex-shrink-0\" />\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"flex gap-2 flex-wrap\">\n                      <Badge className={`text-xs ${getFormatColor(source.format)}`}>\n                        {source.format}\n                      </Badge>\n                      <Badge className={`text-xs ${getQualityColor(source.quality)}`}>\n                        {source.quality}\n                      </Badge>\n                      {source.aspectRatio && (\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {source.aspectRatio === '16/9' ? '📺 Landscape' :\n                           source.aspectRatio === '9/16' ? '📱 Vertical' :\n                           source.aspectRatio === '1/1' ? '⬜ Square' :\n                           source.aspectRatio}\n                        </Badge>\n                      )}\n                    </div>\n\n                    <p className=\"text-xs text-muted-foreground line-clamp-2\">\n                      {hasError ? \"⚠️ This video failed to load. Click 'Retry' to try again.\" : source.description}\n                    </p>\n\n                    <div className=\"flex items-center gap-4 text-xs text-muted-foreground\">\n                      {source.size && (\n                        <div className=\"flex items-center gap-1\">\n                          <Download className=\"h-3 w-3\" />\n                          {source.size}\n                        </div>\n                      )}\n                      <div className=\"flex items-center gap-1\">\n                        <Info className=\"h-3 w-3\" />\n                        {source.features.length} features\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-1\">\n                      {source.features.slice(0, 2).map((feature, index) => (\n                        <div key={index} className=\"flex items-center gap-1\">\n                          <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\" />\n                          <span className=\"text-xs text-muted-foreground\">{feature}</span>\n                        </div>\n                      ))}\n                      {source.features.length > 2 && (\n                        <div className=\"text-xs text-muted-foreground\">\n                          +{source.features.length - 2} more features\n                        </div>\n                      )}\n                    </div>\n\n                    <Button \n                      size=\"sm\" \n                      className=\"w-full mt-2\"\n                      variant={currentSource === source.url ? \"default\" : hasError ? \"destructive\" : \"outline\"}\n                      disabled={(!isSupported && !hasError) || isLoading === source.id}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        if ((isSupported || hasError) && !isLoading) {\n                          handleSourceSelect(source);\n                        }\n                      }}\n                    >\n                      {isLoading === source.id ? \"Loading...\" :\n                       hasError ? \"Retry\" :\n                       !isSupported ? \"Not Supported\" : \n                       currentSource === source.url ? \"Playing\" : \"Load Video\"}\n                    </Button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import React from 'react';\nimport { VideoPlayerState } from '@/hooks/use-video-player';\n\ninterface PlayerStatsProps {\n  state: VideoPlayerState;\n}\n\nexport const PlayerStats: React.FC<PlayerStatsProps> = ({ state }) => {\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-800 rounded-lg p-4 space-y-2\">\n      <h3 className=\"font-semibold text-gray-900 dark:text-white\">Player Statistics</h3>\n      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n        <div>\n          <span className=\"text-gray-600 dark:text-gray-400\">Current Time:</span>\n          <span className=\"ml-2 font-mono\">{state.currentTime.toFixed(2)}s</span>\n        </div>\n        <div>\n          <span className=\"text-gray-600 dark:text-gray-400\">Duration:</span>\n          <span className=\"ml-2 font-mono\">{state.duration.toFixed(2)}s</span>\n        </div>\n        <div>\n          <span className=\"text-gray-600 dark:text-gray-400\">Volume:</span>\n          <span className=\"ml-2 font-mono\">{Math.round(state.volume * 100)}%</span>\n        </div>\n        <div>\n          <span className=\"text-gray-600 dark:text-gray-400\">Quality:</span>\n          <span className=\"ml-2 font-mono\">{state.quality}</span>\n        </div>\n        <div>\n          <span className=\"text-gray-600 dark:text-gray-400\">Buffered:</span>\n          <span className=\"ml-2 font-mono\">{Math.round(state.buffered * 100)}%</span>\n        </div>\n        <div>\n          <span className=\"text-gray-600 dark:text-gray-400\">Playback Rate:</span>\n          <span className=\"ml-2 font-mono\">{state.playbackRate}x</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Check } from 'lucide-react';\n\ninterface Feature {\n  name: string;\n  description: string;\n  enabled: boolean;\n}\n\nconst features: Feature[] = [\n  { name: 'HLS Streaming', description: 'HTTP Live Streaming support', enabled: true },\n  { name: 'DASH Streaming', description: 'Dynamic Adaptive Streaming', enabled: true },\n  { name: 'Mobile Gestures', description: 'Touch-optimized controls', enabled: true },\n  { name: 'Thumbnail Preview', description: 'Timeline hover previews', enabled: true },\n  { name: 'Quality Selection', description: 'Manual quality control', enabled: true },\n  { name: 'Fullscreen', description: 'Full viewport playback', enabled: true },\n  { name: 'Picture-in-Picture', description: 'PiP mode support', enabled: true },\n  { name: 'Keyboard Shortcuts', description: 'Hotkey navigation', enabled: true },\n  { name: 'Analytics', description: 'Playback tracking', enabled: true },\n  { name: 'Auto-hide Controls', description: 'Clean viewing experience', enabled: true },\n];\n\nexport const FeatureList: React.FC = () => {\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-800 rounded-lg p-4\">\n      <h3 className=\"font-semibold text-gray-900 dark:text-white mb-4\">Features</h3>\n      <div className=\"grid gap-2\">\n        {features.map((feature, index) => (\n          <div key={index} className=\"flex items-center space-x-3\">\n            <div className={`w-4 h-4 rounded-full flex items-center justify-center ${\n              feature.enabled ? 'bg-green-100 text-green-600' : 'bg-gray-100 text-gray-400'\n            }`}>\n              {feature.enabled && <Check className=\"w-3 h-3\" />}\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                {feature.name}\n              </div>\n              <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                {feature.description}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport { usePlayerConfig, usePlayerPresets } from '@/contexts/player-config-context';\nimport { Settings, Palette, Keyboard, Smartphone, Zap, Save, RotateCcw } from 'lucide-react';\n\nexport const PlayerConfigPanel: React.FC = () => {\n  const { config, updateConfig, resetConfig, saveConfig, loadSavedConfig, getSavedConfigs } = usePlayerConfig();\n  const { presets, loadPreset } = usePlayerPresets();\n  const [saveConfigName, setSaveConfigName] = useState('');\n\n  const savedConfigs = getSavedConfigs();\n\n  const handleControlVisibilityChange = (control: string, enabled: boolean) => {\n    updateConfig({\n      controls: {\n        ...config.controls,\n        visibility: {\n          ...config.controls?.visibility,\n          [control]: enabled,\n        },\n      },\n    });\n  };\n\n  const handleThemeChange = (property: string, value: string) => {\n    updateConfig({\n      theme: {\n        ...config.theme,\n        [property]: value,\n      },\n    });\n  };\n\n  const handleAutoChange = (property: string, value: any) => {\n    updateConfig({\n      auto: {\n        ...config.auto,\n        [property]: value,\n      },\n    });\n  };\n\n  const handleGestureChange = (property: string, value: boolean) => {\n    updateConfig({\n      gestures: {\n        ...config.gestures,\n        [property]: value,\n      },\n    });\n  };\n\n  return (\n    <Card className=\"w-full max-w-4xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Settings className=\"h-5 w-5\" />\n          Video Player Configuration\n        </CardTitle>\n        <div className=\"flex gap-2 flex-wrap\">\n          <Select onValueChange={loadPreset}>\n            <SelectTrigger className=\"w-48\">\n              <SelectValue placeholder=\"Load Preset\" />\n            </SelectTrigger>\n            <SelectContent>\n              {presets.map((preset) => (\n                <SelectItem key={preset} value={preset}>\n                  {preset.charAt(0).toUpperCase() + preset.slice(1)}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          \n          {savedConfigs.length > 0 && (\n            <Select onValueChange={loadSavedConfig}>\n              <SelectTrigger className=\"w-48\">\n                <SelectValue placeholder=\"Load Saved Config\" />\n              </SelectTrigger>\n              <SelectContent>\n                {savedConfigs.map((name) => (\n                  <SelectItem key={name} value={name}>\n                    {name}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          )}\n          \n          <Button variant=\"outline\" onClick={resetConfig}>\n            <RotateCcw className=\"h-4 w-4 mr-2\" />\n            Reset\n          </Button>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <Tabs defaultValue=\"controls\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-5\">\n            <TabsTrigger value=\"controls\">Controls</TabsTrigger>\n            <TabsTrigger value=\"theme\">Theme</TabsTrigger>\n            <TabsTrigger value=\"behavior\">Behavior</TabsTrigger>\n            <TabsTrigger value=\"gestures\">Gestures</TabsTrigger>\n            <TabsTrigger value=\"save\">Save</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"controls\" className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-medium mb-4\">Control Visibility</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                {Object.entries({\n                  playPause: 'Play/Pause Button',\n                  progress: 'Progress Bar',\n                  volume: 'Volume Control',\n                  quality: 'Quality Selector',\n                  fullscreen: 'Fullscreen Toggle',\n                  pictureInPicture: 'Picture-in-Picture',\n                  theaterMode: 'Theater Mode',\n                  playbackRate: 'Playback Speed',\n                  keyboardShortcuts: 'Keyboard Shortcuts',\n                  settings: 'Settings Menu',\n                  time: 'Time Display',\n                }).map(([key, label]) => (\n                  <div key={key} className=\"flex items-center space-x-2\">\n                    <Switch\n                      id={key}\n                      checked={config.controls?.visibility?.[key as keyof typeof config.controls.visibility] ?? true}\n                      onCheckedChange={(checked) => handleControlVisibilityChange(key, checked)}\n                    />\n                    <Label htmlFor={key} className=\"text-sm\">{label}</Label>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <Separator />\n\n            <div>\n              <h3 className=\"text-lg font-medium mb-4\">Control Style</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"style\">Style</Label>\n                  <Select\n                    value={config.controls?.style || 'youtube'}\n                    onValueChange={(value) => updateConfig({\n                      controls: { ...config.controls, style: value as any }\n                    })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"youtube\">YouTube</SelectItem>\n                      <SelectItem value=\"vimeo\">Vimeo</SelectItem>\n                      <SelectItem value=\"netflix\">Netflix</SelectItem>\n                      <SelectItem value=\"minimal\">Minimal</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"size\">Size</Label>\n                  <Select\n                    value={config.controls?.size || 'medium'}\n                    onValueChange={(value) => updateConfig({\n                      controls: { ...config.controls, size: value as any }\n                    })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"small\">Small</SelectItem>\n                      <SelectItem value=\"medium\">Medium</SelectItem>\n                      <SelectItem value=\"large\">Large</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"theme\" className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\n                <Palette className=\"h-5 w-5\" />\n                Color Theme\n              </h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {Object.entries({\n                  primary: 'Primary Color',\n                  secondary: 'Secondary Color',\n                  accent: 'Accent Color',\n                  progressColor: 'Progress Color',\n                  bufferColor: 'Buffer Color',\n                }).map(([key, label]) => (\n                  <div key={key}>\n                    <Label htmlFor={key}>{label}</Label>\n                    <Input\n                      id={key}\n                      type=\"color\"\n                      value={config.theme?.[key as keyof typeof config.theme] || '#3b82f6'}\n                      onChange={(e) => handleThemeChange(key, e.target.value)}\n                      className=\"h-10\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"behavior\" className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\n                <Zap className=\"h-5 w-5\" />\n                Auto Behaviors\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"autoPlay\"\n                    checked={config.auto?.autoPlay ?? false}\n                    onCheckedChange={(checked) => handleAutoChange('autoPlay', checked)}\n                  />\n                  <Label htmlFor=\"autoPlay\">Auto Play</Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"autoHideControls\"\n                    checked={config.auto?.autoHideControls ?? true}\n                    onCheckedChange={(checked) => handleAutoChange('autoHideControls', checked)}\n                  />\n                  <Label htmlFor=\"autoHideControls\">Auto Hide Controls</Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"rememberVolume\"\n                    checked={config.auto?.rememberVolume ?? true}\n                    onCheckedChange={(checked) => handleAutoChange('rememberVolume', checked)}\n                  />\n                  <Label htmlFor=\"rememberVolume\">Remember Volume</Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"rememberPlaybackRate\"\n                    checked={config.auto?.rememberPlaybackRate ?? true}\n                    onCheckedChange={(checked) => handleAutoChange('rememberPlaybackRate', checked)}\n                  />\n                  <Label htmlFor=\"rememberPlaybackRate\">Remember Playback Rate</Label>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"autoHideDelay\">Auto Hide Delay (ms)</Label>\n                  <Input\n                    id=\"autoHideDelay\"\n                    type=\"number\"\n                    value={config.auto?.autoHideDelay || 3000}\n                    onChange={(e) => handleAutoChange('autoHideDelay', parseInt(e.target.value))}\n                    min=\"1000\"\n                    max=\"10000\"\n                    step=\"500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"gestures\" className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\n                <Smartphone className=\"h-5 w-5\" />\n                Touch Gestures\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"gesturesEnabled\"\n                    checked={config.gestures?.enabled ?? true}\n                    onCheckedChange={(checked) => handleGestureChange('enabled', checked)}\n                  />\n                  <Label htmlFor=\"gesturesEnabled\">Enable Gestures</Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"tapToPlay\"\n                    checked={config.gestures?.tapToPlay ?? true}\n                    onCheckedChange={(checked) => handleGestureChange('tapToPlay', checked)}\n                  />\n                  <Label htmlFor=\"tapToPlay\">Tap to Play/Pause</Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"doubleTapSeek\"\n                    checked={config.gestures?.doubleTapSeek ?? true}\n                    onCheckedChange={(checked) => handleGestureChange('doubleTapSeek', checked)}\n                  />\n                  <Label htmlFor=\"doubleTapSeek\">Double Tap to Seek</Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"swipeVolume\"\n                    checked={config.gestures?.swipeVolume ?? false}\n                    onCheckedChange={(checked) => handleGestureChange('swipeVolume', checked)}\n                  />\n                  <Label htmlFor=\"swipeVolume\">Swipe for Volume</Label>\n                </div>\n              </div>\n            </div>\n\n            <Separator />\n\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\n                <Keyboard className=\"h-5 w-5\" />\n                Keyboard Shortcuts\n              </h3>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"keyboardEnabled\"\n                  checked={config.keyboard?.enabled ?? true}\n                  onCheckedChange={(checked) => updateConfig({\n                    keyboard: { ...config.keyboard, enabled: checked }\n                  })}\n                />\n                <Label htmlFor=\"keyboardEnabled\">Enable Keyboard Shortcuts</Label>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"save\" className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\n                <Save className=\"h-5 w-5\" />\n                Save Configuration\n              </h3>\n              <div className=\"flex gap-2\">\n                <Input\n                  placeholder=\"Configuration name...\"\n                  value={saveConfigName}\n                  onChange={(e) => setSaveConfigName(e.target.value)}\n                />\n                <Button \n                  onClick={() => {\n                    if (saveConfigName.trim()) {\n                      saveConfig(saveConfigName.trim());\n                      setSaveConfigName('');\n                    }\n                  }}\n                  disabled={!saveConfigName.trim()}\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n\n            <Separator />\n\n            <div>\n              <h3 className=\"text-lg font-medium mb-4\">Quick Presets</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                {presets.map((preset) => (\n                  <Button\n                    key={preset}\n                    variant=\"outline\"\n                    onClick={() => loadPreset(preset)}\n                    className=\"justify-start\"\n                  >\n                    <Badge variant=\"secondary\" className=\"mr-2\">\n                      {preset}\n                    </Badge>\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </Card>\n  );\n};\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n","\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface SeparatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nconst Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(\n  ({ className, orientation = \"horizontal\", ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = \"Separator\"\n\nexport { Separator }\n"],"mappings":"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","names":["import_react","import_lucide_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_jsx_runtime","import_react","import_lucide_react","import_react","import_jsx_runtime","formatTime","import_jsx_runtime","formatTime","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_react","import_react","_a","import_react","import_jsx_runtime","import_jsx_runtime","React","isMobileDevice","_a","_b","import_react","import_jsx_runtime","React","import_react","import_react","React","import_jsx_runtime","import_class_variance_authority","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_jsx_runtime","videoSources","import_react","import_jsx_runtime","import_lucide_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","Label","React","import_jsx_runtime","Separator","import_lucide_react","import_jsx_runtime","_a","_b","_c","Label","Separator"]}